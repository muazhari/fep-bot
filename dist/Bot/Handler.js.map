{"version":3,"sources":["../../src/Bot/Handler.js"],"names":["baseURL","process","env","BASE_URL","batch_list","a","b","c","d","e","command_prefix","commandValidate","chat","prefix","command","slice","length","args","map","item","trim","console","log","handleCommand","commandList","content_prefix","content_command","content_args","Object","keys","includes","userQueue","Bot","queue","increment","user","userId","getId","decrement","Handler","event","Worker","whitelist","Features","Access","type","room","message","handleText","handleImage","handleVideo","handleAudio","handleLocation","handleSticker","Error","JSON","stringify","client","getProfile","joined","members","then","profile","replyText","displayName","source","data","postback","params","beacon","hwid","replyToken","props","FEPList","StoreAdvance","Basic","Template","add","upd","update","rem","remove","view","rstore","reset_store","pstore","pre_store","bstore","backup_store","admin","help","button","confirm","bifest","greet","say","chat_splitted","text","split","msgToCmdValidate","DialogFlow","talk","getContent","contentProvider","downloadPath","path","join","__dirname","id","previewPath","downloadContent","cp","execSync","originalContentUrl","basename","previewImageUrl","catch","err","Promise","resolve","sendMessage","title","address","latitude","longitude"],"mappings":"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","file":"Handler.js","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport cp from \"child_process\";\nimport { Bot } from \"./internal\";\n\n// base URL for webhook server\nexport const baseURL = process.env.BASE_URL;\n\nexport const batch_list = {\n  a: \"22 - 27 JULI 2019\",\n  b: \"29 JULI - 3 AGUSTUS 2019\",\n  c: \"5 - 10 AGUSTUS 2019\",\n  d: \"19 - 24 AGUSTUS 2019\",\n  e: \"26 - 03 SEPTEMBER 2019\"\n};\n\nexport const command_prefix = \"/\";\n\nconst commandValidate = chat => {\n  const prefix = chat[0][0];\n  const command = chat[0].slice(1, chat[0].length);\n  const args = chat.slice(1, chat.length).map(item => item.trim());\n  \n  if (prefix === command_prefix) {\n    console.log({ prefix, command, args })\n    return { prefix, command, args };\n  } else {\n    return false\n  }\n};\n\nconst handleCommand = (commandList, commandValidate) => {\n  const { prefix: content_prefix, command: content_command, args: content_args } = commandValidate;\n    if (Object.keys(commandList).includes(content_command)) {\n      if (commandList[content_command].length >= 1) {\n        commandList[content_command](content_args);\n      } else {\n        commandList[content_command]();\n      }\n  }\n};\n\nconst userQueue = Bot => {\n  const queue = {};\n\n  const increment = () => {\n    const { user: userId } = Bot.getId();\n    if (!queue[userId]) {\n      queue[userId] = 0;\n    }\n    queue[userId] += 1;\n  };\n\n  const decrement = () => {\n     const { user: userId } = Bot.getId();\n    if (!queue[userId]) {\n      queue[userId] = 0;\n    }\n    if (queue[userId] >= 1) {\n      queue[userId] -= 1;\n    }\n  };\n\n  return {\n    increment,\n    decrement\n  };\n};\n\nexport const Handler = event => {\n  console.log(event);\n\n  const Worker = new Bot({ event });\n  // Worker.log()\n\n  const whitelist = Worker.Features.Access.whitelist();\n  console.log(whitelist);\n  const type = whitelist.user || whitelist.room ? event.type : null;\n\n  switch (type) {\n    case \"message\":\n      const { message } = event;\n      switch (message.type) {\n        case \"text\":\n          return handleText(Worker);\n        case \"image\":\n          return handleImage(Worker);\n        case \"video\":\n          return handleVideo(Worker);\n        case \"audio\":\n          return handleAudio(Worker);\n        case \"location\":\n          return handleLocation(Worker);\n        case \"sticker\":\n          return handleSticker(Worker);\n        default:\n          throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n      }\n\n    case \"memberJoined\":\n      return Worker.client\n        .getProfile(event.joined.members[0].userId)\n        .then(profile => {\n          Worker.replyText(\n            `Welcome ${profile.displayName}! Jangan lupa cek notes di group ya!`\n          );\n        });\n\n    case \"follow\":\n      return Worker.replyText(\"Got followed event\");\n\n    case \"unfollow\":\n      return console.log(`Unfollowed this bot: ${JSON.stringify(event)}`);\n\n    case \"join\":\n      return Worker.replyText(`Joined ${event.source.type}`);\n\n    case \"leave\":\n      return console.log(`Left: ${JSON.stringify(event)}`);\n\n    case \"postback\":\n      let { data } = event.postback;\n      if (data === \"DATE\" || data === \"TIME\" || data === \"DATETIME\") {\n        data += `(${JSON.stringify(event.postback.params)})`;\n      }\n      return Worker.replyText(`Got postback: ${data}`);\n\n    case \"beacon\":\n      return Worker.replyText(`Got beacon: ${event.beacon.hwid}`);\n\n    default:\n      throw new Error(`Unknown event: ${JSON.stringify(event)}`);\n  }\n};\n\nconst handleText = async Bot => {\n  const { message, replyToken, source } = Bot.props.event;\n  const { FEPList, StoreAdvance, Basic, Template } = Bot.Features;\n\n  const commandList = {\n    add: FEPList.add,\n    upd: FEPList.update,\n    rem: FEPList.remove,\n    view: FEPList.view,\n    rstore: StoreAdvance.reset_store,\n    pstore: StoreAdvance.pre_store,\n    bstore: StoreAdvance.backup_store,\n    \"]]\": Basic.admin,\n    help: Basic.help,\n    button: Template.button,\n    profile: Basic.profile,\n    confirm: Template.confirm,\n    bifest: Template.bifest,\n    greet: Basic.greet,\n    say: Basic.say\n  };\n\n  // The text query request.\n  const chat_splitted = message.text.split(\" \");\n  const msgToCmdValidate = commandValidate(chat_splitted)\n  if (msgToCmdValidate) {\n    handleCommand(commandList, msgToCmdValidate);\n  } else {\n    Bot.DialogFlow.talk(message.text);\n  }\n  \n};\n\nconst handleImage = async Bot => {\n  const { message, replyToken } = Bot.props.event;\n  let getContent;\n\n  if (message.contentProvider.type === \"line\") {\n    const downloadPath = path.join(\n      __dirname,\n      \"../../src/Bot/Assets/downloaded/images\",\n      `${message.id}.jpg`\n    );\n    const previewPath = path.join(\n      __dirname,\n      \"../../src/Bot/Assets/downloaded/images\",\n      `${message.id}-preview.jpg`\n    );\n\n    getContent = Bot.downloadContent(message.id, downloadPath)\n      .then(downloadPath => {\n        console.log(\"premature_resolve\", downloadPath);\n        cp.execSync(\n          `convert -resize 240x jpg:${downloadPath} jpg:${previewPath}`\n        );\n        return {\n          originalContentUrl: `${baseURL}/downloaded/images/${path.basename(\n            downloadPath\n          )}`,\n          previewImageUrl: `${baseURL}/downloaded/images/${path.basename(\n            previewPath\n          )}`\n        };\n      })\n      .catch(err => {\n        throw err;\n      });\n  } else if (message.contentProvider.type === \"external\") {\n    getContent = Promise.resolve(message.contentProvider);\n  }\n\n  return getContent.then(({ originalContentUrl, previewImageUrl }) => {\n    console.log({ originalContentUrl, previewImageUrl });\n    // Bot.replyText(\n    //   `transmitted img url: ${JSON.stringify({\n    //     originalContentUrl,\n    //     previewImageUrl\n    //   })}`\n    // );\n    Bot.sendMessage({\n      type: \"image\",\n      originalContentUrl,\n      previewImageUrl\n    });\n  });\n};\n\nconst handleVideo = Bot => {\n  const { message, replyToken } = Bot.props.event;\n  let getContent;\n  if (message.contentProvider.type === \"line\") {\n    const downloadPath = path.join(\n      __dirname,\n      \"../../src/Bot/Assets/downloaded/videos\",\n      `${message.id}.mp4`\n    );\n    const previewPath = path.join(\n      __dirname,\n      \"../../src/Bot/Assets/downloaded/videos\",\n      `${message.id}-preview.jpg`\n    );\n\n    getContent = Bot.downloadContent(message.id, downloadPath).then(\n      downloadPath => {\n        // FFmpeg and ImageMagick is needed here to run 'convert'\n        // Please consider about security and performance by yourself\n        cp.execSync(`convert mp4:${downloadPath}[0] jpeg:${previewPath}`);\n\n        return {\n          originalContentUrl: `${baseURL}/downloaded/videos/${path.basename(\n            downloadPath\n          )}`,\n          previewImageUrl: `${baseURL}/downloaded/videos/${path.basename(\n            previewPath\n          )}`\n        };\n      }\n    );\n  } else if (message.contentProvider.type === \"external\") {\n    getContent = Promise.resolve(message.contentProvider);\n  }\n\n  return getContent.then(({ originalContentUrl, previewImageUrl }) => {\n    // Bot.sendMessage({\n    //   type: \"video\",\n    //   originalContentUrl,\n    //   previewImageUrl\n    // });\n  });\n};\n\nconst handleAudio = Bot => {\n  const { message, replyToken } = Bot.props.event;\n  let getContent;\n  if (message.contentProvider.type === \"line\") {\n    const downloadPath = path.join(\n      __dirname,\n      \"../../src/Bot/Assets/downloaded/audios\",\n      `${message.id}.m4a`\n    );\n\n    getContent = Bot.downloadContent(message.id, downloadPath).then(\n      downloadPath => {\n        return {\n          originalContentUrl: `${baseURL}/downloaded/audios/${path.basename(\n            downloadPath\n          )}`\n        };\n      }\n    );\n  } else {\n    getContent = Promise.resolve(message.contentProvider);\n  }\n\n  return getContent.then(({ originalContentUrl }) => {\n    // Bot.sendMessage({\n    //   type: \"audio\",\n    //   originalContentUrl,\n    //   duration: message.duration\n    // });\n  });\n};\n\nconst handleLocation = Bot => {\n  const { message, replyToken } = Bot.props.event;\n  Bot.sendMessage({\n    type: \"location\",\n    title: message.title,\n    address: message.address,\n    latitude: message.latitude,\n    longitude: message.longitude\n  });\n};\n\nconst handleSticker = Bot => {\n  const { message, replyToken } = Bot.props.event;\n  // Bot.sendMessage({\n  //   type: \"sticker\",\n  //   packageId: message.packageId,\n  //   stickerId: message.stickerId\n  // });\n};\n"]}