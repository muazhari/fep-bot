{"version":3,"sources":["../../src/Bot/handlerBot.js"],"names":["baseURL","process","env","BASE_URL","batch_list","a","b","c","d","e","command_prefix","destructCommand","chat","prefix","command","slice","length","args","map","item","trim","console","log","handleCommand","features","FEPList","StoreAdvance","Basic","Template","Twibbon","Courses","PosetLattice","commandList","add","upd","update","rem","remove","view","rstore","reset_store","pstore","pre_store","bstore","backup_store","admin","help","button","profile","confirm","bifest","greet","say","twibbon","ready","algo","pl","generate","binushack","test","content_prefix","content_command","content_args","Object","keys","includes","userQueue","userId","queue","increment","decrement","handlerBot","constructor","Bot","Features","eventListener","props","event","type","message","handleText","handleImage","handleVideo","handleAudio","handleLocation","handleSticker","Error","JSON","stringify","client","getProfile","joined","members","then","replyText","displayName","source","data","postback","params","objectData","parse","listenPostback","beacon","replyToken","splittedChat","text","split","isTextCommand","dialogFlow","listen","getContent","imageData","originalContentPath","path","join","__dirname","id","previewPath","originalContentUrl","previewImageUrl","imageLogPath","downloadContent","CloudinaryUtils","upload","fs","unlinkSync","contentProvider","cp","execSync","catch","err","listenImage","Promise","resolve","videoData","videoLogPath","audioData","audioLogPath","sendMessage","title","address","latitude","longitude"],"mappings":"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","file":"handlerBot.js","sourcesContent":["import fs from \"fs-extra\";\nimport path from \"path\";\nimport cp from \"child_process\";\nimport {SharedProps} from \"../Bot\";\nimport CloudinaryUtils from \"../Bot/Helper/CloudinaryUtils\";\n\n// base URL for webhook server\nexport const baseURL = process.env.BASE_URL;\n\nexport const batch_list = {\n  a: \"22 - 27 JULI 2019\",\n  b: \"29 JULI - 3 AGUSTUS 2019\",\n  c: \"5 - 10 AGUSTUS 2019\",\n  d: \"19 - 24 AGUSTUS 2019\",\n  e: \"26 - 03 SEPTEMBER 2019\"\n};\n\nexport const command_prefix = \"/\";\n\nconst destructCommand = chat => {\n  const prefix = chat[0][0];\n  const command = chat[0].slice(1, chat[0].length);\n  const args = chat.slice(1, chat.length).map(item => item.trim());\n\n  console.log(\"[HandlerBot] Command destructed\", {prefix, command, args});\n  return {prefix, command, args};\n};\n\nconst handleCommand = (features, command) => {\n  const {\n    FEPList,\n    StoreAdvance,\n    Basic,\n    Template,\n    Twibbon,\n    Courses,\n    PosetLattice\n  } = features;\n\n  const commandList = {\n    add: FEPList.add,\n    upd: FEPList.update,\n    rem: FEPList.remove,\n    view: FEPList.view,\n    rstore: StoreAdvance.reset_store,\n    pstore: StoreAdvance.pre_store,\n    bstore: StoreAdvance.backup_store,\n    \"]]\": Basic.admin,\n    help: Basic.help,\n    button: Template.button,\n    profile: Basic.profile,\n    confirm: Template.confirm,\n    bifest: Template.bifest,\n    greet: Basic.greet,\n    say: Basic.say,\n    twibbon: Twibbon.ready,\n    algo: Courses.algo,\n    pl: PosetLattice.generate,\n    binushack: Template.binushack,\n    test: Template.test,\n  };\n\n  const {prefix: content_prefix, command: content_command, args: content_args} = destructCommand(command);\n\n  if (Object.keys(commandList).includes(content_command)) {\n    if (commandList[content_command].length >= 1) {\n      commandList[content_command](content_args);\n    } else {\n      commandList[content_command]();\n    }\n  }\n};\n\nconst userQueue = userId => {\n  const queue = {};\n\n  const increment = () => {\n    if (!queue[userId]) {\n      queue[userId] = 0;\n    }\n    queue[userId] += 1;\n  };\n\n  const decrement = () => {\n    if (!queue[userId]) {\n      queue[userId] = 0;\n    }\n    if (queue[userId] >= 1) {\n      queue[userId] -= 1;\n    }\n  };\n\n  return {increment, decrement};\n};\n\nexport class handlerBot {\n  constructor(Bot) {\n    this.Bot = Bot;\n    this.features = Bot.Features;\n    this.eventListener(Bot.props.event);\n  }\n\n  eventListener(event) {\n    console.log(\"[HandlerBot] Event:\", event);\n    // hidden error, need fix\n    // const this.Bot = new Bot({ event });\n    // this.Bot.log()\n\n    // const whitelist = this.Bot.Features.Access.whitelist();\n    // console.log(whitelist);\n    // const type = whitelist.user || whitelist.room ? event.type : null;\n\n    switch (event.type) {\n      case \"message\":\n        const {message} = event;\n        switch (message.type) {\n          case \"text\":\n            return this.handleText();\n          case \"image\":\n            return this.handleImage();\n          case \"video\":\n            return this.handleVideo();\n          case \"audio\":\n            return this.handleAudio();\n          case \"location\":\n            return this.handleLocation();\n          case \"sticker\":\n            return this.handleSticker();\n          default:\n            throw new Error(`Unknown message: ${JSON.stringify(message)}`);\n        }\n\n      case \"memberJoined\":\n        return this.Bot.client.getProfile(event.joined.members[0].userId).then(profile => {\n          this.Bot.replyText(`Welcome ${profile.displayName}! Jangan lupa cek notes di group ya!`);\n        });\n\n      case \"follow\":\n        return this.Bot.replyText(\"Got followed event\");\n\n      case \"unfollow\":\n        return console.log(`[HandlerBot] Unfollowed this bot: ${JSON.stringify(event)}`);\n\n      case \"join\":\n        return this.Bot.replyText(`Joined ${event.source.type}`);\n\n      case \"leave\":\n        return console.log(`[HandlerBot] Left: ${JSON.stringify(event)}`);\n\n      case \"postback\":\n        let {data} = event.postback;\n        if (data === \"DATE\" || data === \"TIME\" || data === \"DATETIME\") {\n          data += `(${JSON.stringify(event.postback.params)})`;\n        }\n\n        const objectData = JSON.parse(data);\n\n        const {Twibbon} = this.Bot.Features;\n        console.log(\"[HandlerBot] Postback listened\", objectData);\n        Twibbon.listenPostback(objectData);\n\n        break;\n\n      case \"beacon\":\n        return this.Bot.replyText(`Got beacon: ${event.beacon}`);\n\n      default:\n        throw new Error(`[HandlerBot] Unknown event: ${JSON.stringify(event)}`);\n    }\n  }\n\n  handleText() {\n    const {message, replyToken, source} = this.Bot.props.event;\n\n    // The text query request.\n    const splittedChat = message.text.split(\" \");\n    const isTextCommand = splittedChat[0][0] === command_prefix;\n    if (isTextCommand) {\n      handleCommand(this.Bot.Features, splittedChat);\n    } else {\n      // hidden error, need fix\n      this.Bot.dialogFlow.listen();\n    }\n  }\n\n  handleImage() {\n    const {message, replyToken} = this.Bot.props.event;\n    let getContent;\n\n    const imageData = {\n      originalContentPath: path.join(__dirname, \"../../assets/downloaded/images\", `${message.id}.jpg`),\n      previewPath: path.join(__dirname, \"../../assets/downloaded/images\", `${message.id}-preview.jpg`),\n      originalContentUrl: `${baseURL}/downloaded/images/${message.id}.jpg`,\n      previewImageUrl: `${baseURL}/downloaded/images/${message.id}.jpg`\n    };\n\n    const imageLogPath = path.join(__dirname, \"../../assets/downloaded/images\", `${message.id}-log.jpg`);\n    this.Bot.downloadContent(message.id, imageLogPath).then(() => {\n      CloudinaryUtils.upload(imageData.originalContentUrl, message.id).then(() => {\n        console.log(\"[HandlerBot] Image logged\", imageLogPath);\n        fs.unlinkSync(imageLogPath);\n      });\n    });\n\n    if (message.contentProvider.type === \"line\") {\n      getContent = () => {\n        return this.Bot.downloadContent(message.id, imageData.originalContentPath).then(() => {\n          cp.execSync(`convert -resize 240x jpg:${imageData.originalContentPath} jpg:${imageData.previewPath}`);\n          return imageData;\n        }).catch(err => {\n          throw err;\n        });\n      };\n\n      // Twibbon switch\n      const {Twibbon} = this.Bot.Features;\n      Twibbon.listenImage(getContent);\n    } else if (message.contentProvider.type === \"external\") {\n      getContent = () => {\n        return Promise.resolve(message.contentProvider);\n      };\n    }\n\n    return getContent.then(({originalContentUrl, previewImageUrl}) => {\n      // this.Bot.sendMessage({\n      //   type: \"image\",\n      //   originalContentUrl: originalContentUrl,\n      //   previewImageUrl: previewImageUrl\n      // });\n    });\n  }\n\n  handleVideo() {\n    const {message, replyToken} = this.Bot.props.event;\n    let getContent;\n\n    const videoData = {\n      originalContentPath: path.join(__dirname, \"../../assets/downloaded/videos\", `${message.id}.mp4`),\n      previewPath: path.join(__dirname, \"../../assets/downloaded/videos\", `${message.id}-preview.mp4`),\n      originalContentUrl: `${baseURL}/downloaded/videos/${message.id}.jpg`,\n      previewImageUrl: `${baseURL}/downloaded/videos/${message.id}.jpg`\n    };\n\n    const videoLogPath = path.join(__dirname, \"../../assets/downloaded/videos\", `${message.id}-log.jpg`);\n    this.Bot.downloadContent(message.id, videoLogPath).then(() => {\n      CloudinaryUtils.upload(videoData.originalContentUrl, message.id).then(() => {\n        console.log(\"[HandlerBot] Video logged\", videoLogPath);\n        fs.unlinkSync(videoLogPath);\n      });\n    });\n\n    if (message.contentProvider.type === \"line\") {\n      getContent = this.Bot.downloadContent(message.id, videoData.originalContentPath).then(() => {\n        // FFmpeg and ImageMagick is needed here to run 'convert'\n        // Please consider about security and performance by yourself\n        cp.execSync(`convert mp4:${videoData.originalContentPath} jpeg:${videoData.previewPath}`);\n\n        return videoData;\n      });\n    } else if (message.contentProvider.type === \"external\") {\n      getContent = () => {\n        return Promise.resolve(message.contentProvider);\n      };\n    }\n\n    return getContent.then(({originalContentUrl, previewImageUrl}) => {\n      // this.Bot.sendMessage({\n      //   type: \"video\",\n      //   originalContentUrl,\n      //   previewImageUrl\n      // });\n    });\n  }\n\n  handleAudio() {\n    const {message, replyToken} = this.Bot.props.event;\n    let getContent;\n\n    const audioData = {\n      originalContentPath: path.join(__dirname, \"../../assets/downloaded/audios\", `${message.id}.m4a`),\n      originalContentUrl: `${baseURL}/downloaded/audios/${message.id}.m4a`\n    };\n\n    const audioLogPath = path.join(__dirname, \"../../assets/downloaded/audios\", `${message.id}-log.jpg`);\n    this.Bot.downloadContent(message.id, audioLogPath).then(() => {\n      CloudinaryUtils.upload(audioData.originalContentUrl, message.id).then(() => {\n        console.log(\"[HandlerBot] Audio logged\", audioLogPath);\n        fs.unlinkSync(audioLogPath);\n      });\n    });\n\n    if (message.contentProvider.type === \"line\") {\n      getContent = this.Bot.downloadContent(message.id, audioData.originalContentPath).then(() => {\n        return audioData;\n      });\n    } else {\n      getContent = () => {\n        return Promise.resolve(message.contentProvider);\n      };\n    }\n\n    return getContent.then(({originalContentUrl}) => {\n      // this.Bot.sendMessage({\n      //   type: \"audio\",\n      //   originalContentUrl,\n      //   duration: message.duration\n      // });\n    });\n  }\n\n  handleLocation() {\n    const {message, replyToken} = this.Bot.props.event;\n    this.Bot.sendMessage({type: \"location\", title: message.title, address: message.address, latitude: message.latitude, longitude: message.longitude});\n  }\n\n  handleSticker() {\n    const {message, replyToken} = this.Bot.props.event;\n    // this.Bot.sendMessage({\n    //   type: \"sticker\",\n    //   packageId: message.packageId,\n    //   stickerId: message.stickerId\n    // });\n  }\n}\n"]}