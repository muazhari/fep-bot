{"version":3,"sources":["../../../src/Bot/DialogFlow/DialogFlow.js"],"names":["DialogFlow","constructor","Bot","get_parameter","bind","get_query","chat_switch","chat","agent","default_agent","projectId","config","sessionId","uuid","v4","sessionClient","dialogflow","SessionsClient","sessionPath","temp_chat_switch","propsId","getId","origin","responses","fields","queryResult","parameters","displayName","intent","allRequiredParamsPresent","msg","query","session","queryInput","text","languageCode","parameter","chatCallback","shared_props","dialogFlow","talking","Object","keys","includes","JSON","parse","stringValue","Promise","resolve","reject","message","props","event","detectIntent","then","fulfillmentText","length","console","log","stringify","status","err"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AAEO,MAAMA,UAAN,CAAiB;AACtBC,cAAYC,GAAZ,EAAiB;AACf,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,IAAL,GAAY,KAAKA,IAAL,CAAUH,IAAV,CAAe,IAAf,CAAZ;;AAEA;AACA,SAAKI,KAAL,GAAaC,yBAAb;AACA,SAAKC,SAAL,GAAiB,KAAKF,KAAL,CAAWE,SAA5B;AACA,SAAKC,MAAL,GAAc,KAAKH,KAAL,CAAWG,MAAzB;;AAEA;AACA,SAAKC,SAAL,GAAiBC,eAAKC,EAAL,EAAjB;;AAEA;AACA,SAAKC,aAAL,GAAqB,IAAIC,qBAAWC,cAAf,CAA8B,KAAKN,MAAnC,CAArB;AACA,SAAKO,WAAL,GAAmB,KAAKH,aAAL,CAAmBG,WAAnB,CAA+B,KAAKR,SAApC,EAA+C,KAAKE,SAApD,CAAnB;;AAEA,SAAKO,gBAAL,GAAwB,IAAxB;;AAEA,SAAKC,OAAL,GAAe,KAAKlB,GAAL,CAASmB,KAAT,GAAiBC,MAAhC;AACD;AACDnB,gBAAcoB,SAAd,EAAyB;AACvB,UAAM,EAACC,MAAD,KAAWD,UAAU,CAAV,EAAaE,WAAb,CAAyBC,UAA1C;AACA,UAAM,EAACC,WAAD,KAAgBJ,UAAU,CAAV,EAAaE,WAAb,CAAyBG,MAA/C;AACA,UAAM,EAACC,wBAAD,KAA6BN,UAAU,CAAV,EAAaE,WAAhD;AACA,WAAO,EAACE,WAAD,EAAcH,MAAd,EAAsBK,wBAAtB,EAAP;AACD;;AAEDxB,YAAUyB,GAAV,EAAe;AACb,UAAMC,QAAQ;AACZC,eAAS,KAAKd,WADF;AAEZe,kBAAY;AACVC,cAAM;AACJ;AACAA,gBAAMJ,GAFF;AAGJ;AACAK,wBAAc;AAJV;AADI;AAFA,KAAd;AAWA,WAAOJ,KAAP;AACD;;AAEDzB,cAAY8B,SAAZ,EAAuBC,YAAvB,EAAqC;AACnC,UAAM,EAACb,MAAD,EAASG,WAAT,KAAwBS,SAA9B;AACA,QAAIE,kBAAa,KAAKlB,OAAlB,EAA2BmB,UAA3B,CAAsCC,OAAtC,IAAiDb,gBAAgB,WAArE,EAAkF;AAChF,UAAIc,OAAOC,IAAP,CAAYlB,MAAZ,EAAoBmB,QAApB,CAA6B,MAA7B,CAAJ,EAA0C;AACxCL,0BAAa,KAAKlB,OAAlB,EAA2B,YAA3B,EAAyC,SAAzC,IAAsDwB,KAAKC,KAAL,CAAWrB,OAAOjB,IAAP,CAAYuC,WAAvB,CAAtD;AACD;AACD,aAAOT,cAAP;AACD;AACF;;AAED;AACA9B,SAAO;AACL,WAAO,IAAIwC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,UAAI;AACF,cAAM,EAACC,OAAD,KAAY,KAAKhD,GAAL,CAASiD,KAAT,CAAeC,KAAjC;AACA,cAAMrB,QAAQ,KAAK1B,SAAL,CAAe6C,QAAQhB,IAAvB,CAAd;AACA,aAAKnB,aAAL,CAAmBsC,YAAnB,CAAgCtB,KAAhC,EAAuCuB,IAAvC,CAA4C/B,aAAa;AACvD,gBAAMa,YAAY,KAAKjC,aAAL,CAAmBoB,SAAnB,CAAlB;;AAEA,gBAAM,EAACE,WAAD,KAAgBF,UAAU,CAAV,CAAtB;AACA,gBAAM,EAACgC,eAAD,KAAoB9B,WAA1B;;AAEA,gBAAMY,eAAe,MAAM;AACzB,mBAAOW,QAAQ,EAACO,eAAD,EAAkBnB,SAAlB,EAAR,CAAP;AACD,WAFD;;AAIA,cAAImB,gBAAgBC,MAAhB,IAA0B,CAA9B,EAAiC;AAC/B,iBAAKlD,WAAL,CAAiB8B,SAAjB,EAA4BC,YAA5B;AACD;;AAEDoB,kBAAQC,GAAR,CAAY,WAAZ,EAAyBd,KAAKe,SAAL,CAAevB,SAAf,CAAzB;AACAqB,kBAAQC,GAAR,CAAY,cAAZ,EAA4BpB,kBAAa,KAAKlB,OAAlB,EAA2BwC,MAAvD,EAA+DA,MAA/D;AACAH,kBAAQC,GAAR,CAAY,iBAAZ,EAA+BnC,UAAU,CAAV,EAAaE,WAAb,CAAyBE,WAAxD;AACD,SAjBD;AAkBD,OArBD,CAqBE,OAAOkC,GAAP,EAAY;AACZZ,eAAOY,GAAP;AACD;AACF,KAzBM,CAAP;AA0BD;AApFqB;QAAX7D,U,GAAAA,U","file":"DialogFlow.js","sourcesContent":["import dialogflow from \"dialogflow\";\nimport uuid from \"uuid\";\nimport {default_agent} from \"../../Config/DialogFlow\";\nimport {shared_props} from \"../../Bot\";\n\nexport class DialogFlow {\n  constructor(Bot) {\n    this.Bot = Bot;\n    this.get_parameter = this.get_parameter.bind(this);\n    this.get_query = this.get_query.bind(this);\n    this.chat_switch = this.chat_switch.bind(this);\n    this.chat = this.chat.bind(this);\n\n    // selected agent\n    this.agent = default_agent;\n    this.projectId = this.agent.projectId;\n    this.config = this.agent.config;\n\n    // A unique identifier for the given session\n    this.sessionId = uuid.v4();\n\n    // Create a new session\n    this.sessionClient = new dialogflow.SessionsClient(this.config);\n    this.sessionPath = this.sessionClient.sessionPath(this.projectId, this.sessionId);\n\n    this.temp_chat_switch = true;\n\n    this.propsId = this.Bot.getId().origin;\n  }\n  get_parameter(responses) {\n    const {fields} = responses[0].queryResult.parameters;\n    const {displayName} = responses[0].queryResult.intent;\n    const {allRequiredParamsPresent} = responses[0].queryResult;\n    return {displayName, fields, allRequiredParamsPresent};\n  }\n\n  get_query(msg) {\n    const query = {\n      session: this.sessionPath,\n      queryInput: {\n        text: {\n          // The query to send to the dialogflow agent\n          text: msg,\n          // The language used by the client (en-US/id)\n          languageCode: \"id\"\n        }\n      }\n    };\n    return query;\n  }\n\n  chat_switch(parameter, chatCallback) {\n    const {fields, displayName} = parameter;\n    if (shared_props[this.propsId].dialogFlow.talking || displayName === \"chat.talk\") {\n      if (Object.keys(fields).includes(\"chat\")) {\n        shared_props[this.propsId][\"dialogFlow\"][\"talking\"] = JSON.parse(fields.chat.stringValue);\n      }\n      return chatCallback();\n    }\n  }\n\n  // Send request and log result\n  chat() {\n    return new Promise((resolve, reject) => {\n      try {\n        const {message} = this.Bot.props.event;\n        const query = this.get_query(message.text);\n        this.sessionClient.detectIntent(query).then(responses => {\n          const parameter = this.get_parameter(responses);\n\n          const {queryResult} = responses[0];\n          const {fulfillmentText} = queryResult;\n\n          const chatCallback = () => {\n            return resolve({fulfillmentText, parameter});\n          };\n\n          if (fulfillmentText.length >= 1) {\n            this.chat_switch(parameter, chatCallback);\n          }\n\n          console.log(\"parameter\", JSON.stringify(parameter));\n          console.log(\"shared_props\", shared_props[this.propsId].status, status);\n          console.log(\"Detected intent\", responses[0].queryResult.displayName);\n        });\n      } catch (err) {\n        reject(err);\n      }\n    });\n  }\n}\n"]}