{"version":3,"sources":["../../../src/Bot/DialogFlow/DialogFlow.js"],"names":["DialogFlow","Bot","message","source","props","event","projectId","sessionId","uuid","v4","sessionClient","dialogflow","SessionsClient","config","sessionPath","talk_check","responses","fields","queryResult","parameters","displayName","intent","Object","keys","includes","shared_props","getId","default","talk","stringValue","get_query","msg","query","session","queryInput","text","languageCode","detectIntent","fulfillmentText","status","length","replyText","console","log"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEO,MAAMA,kCAAaC,OAAO;AAC/B,QAAM,EAAEC,OAAF,EAAWC,MAAX,KAAsBF,IAAIG,KAAJ,CAAUC,KAAtC;AACA,QAAMC,YAAY,iBAAlB;AACA;AACA,QAAMC,YAAYC,eAAKC,EAAL,EAAlB;;AAEA;AACA,QAAMC,gBAAgB,IAAIC,qBAAWC,cAAf,CAA8BC,oBAA9B,CAAtB;AACA,QAAMC,cAAcJ,cAAcI,WAAd,CAA0BR,SAA1B,EAAqCC,SAArC,CAApB;;AAEA,QAAMQ,aAAaC,aAAa;AAC9B,UAAM,EAAEC,MAAF,KAAaD,UAAU,CAAV,EAAaE,WAAb,CAAyBC,UAA5C;AACA,UAAM,EAAEC,WAAF,KAAkBJ,UAAU,CAAV,EAAaE,WAAb,CAAyBG,MAAjD;AACA,QAAID,gBAAgB,cAAhB,IAAkCA,gBAAgB,gBAAtD,EAAwE;AACtE,UAAIE,OAAOC,IAAP,CAAYN,MAAZ,EAAoBO,QAApB,CAA6B,MAA7B,CAAJ,EAA0C;AACxCC,+BAAaxB,IAAIyB,KAAJ,GAAYC,OAAzB,EAAkC,QAAlC,IAA8CV,OAAOW,IAAP,CAAYC,WAAZ,KAA4B,MAA1E;AACD;AACF;AACF,GARD;;AAUA,QAAMC,YAAYC,OAAO;AACvB,UAAMC,QAAQ;AACZC,eAASnB,WADG;AAEZoB,kBAAY;AACVC,cAAM;AACJ;AACAA,gBAAMJ,GAFF;AAGJ;AACAK,wBAAc;AAJV;AADI;AAFA,KAAd;;AAYA,WAAOJ,KAAP;AACD,GAdD;;AAgBA;AACA,QAAMJ,OAAO,MAAMG,GAAN,IAAa;AACxB,UAAMC,QAAQF,UAAUC,GAAV,CAAd;AACA,UAAMf,YAAY,MAAMN,cAAc2B,YAAd,CAA2BL,KAA3B,CAAxB;AACA,UAAM,EAAEM,eAAF,KAAsBtB,UAAU,CAAV,EAAaE,WAAzC;;AAEA,UAAMqB,SAASd,uBAAaxB,IAAIyB,KAAJ,GAAYC,OAAzB,EAAkCY,MAAlC,GAA0Cd,uBAAaxB,IAAIyB,KAAJ,GAAYC,OAAzB,EAAkCY,MAA5E,GAAoF,IAAnG;;AAEA,QAAIA,UAAUD,gBAAgBE,MAAhB,IAA0B,CAAxC,EAA2C;AACzCvC,UAAIwC,SAAJ,CAAcH,eAAd;AACD;;AAEDvB,eAAWC,SAAX;AACA0B,YAAQC,GAAR,CAAYlB,sBAAZ;AACAiB,YAAQC,GAAR,CAAYlB,uBAAaxB,IAAIyB,KAAJ,GAAYC,OAAzB,EAAkCY,MAA9C,EAAsDA,MAAtD;AACAG,YAAQC,GAAR,CAAY,iBAAZ,EAA+B3B,UAAU,CAAV,EAAaE,WAAb,CAAyBG,MAAzB,CAAgCD,WAA/D;AACD,GAfD;;AAiBA,SAAO;AACLQ;AADK,GAAP;AAGD,CAzDM","file":"DialogFlow.js","sourcesContent":["import dialogflow from \"dialogflow\";\nimport uuid from \"uuid\";\nimport config from \"../../Config/DialogFlow\";\nimport { shared_props } from \"../../Bot/internal\";\n\nexport const DialogFlow = Bot => {\n  const { message, source } = Bot.props.event;\n  const projectId = \"newagent-nlaqvy\";\n  // A unique identifier for the given session\n  const sessionId = uuid.v4();\n\n  // Create a new session\n  const sessionClient = new dialogflow.SessionsClient(config);\n  const sessionPath = sessionClient.sessionPath(projectId, sessionId);\n\n  const talk_check = responses => {\n    const { fields } = responses[0].queryResult.parameters;\n    const { displayName } = responses[0].queryResult.intent;\n    if (displayName === \"Feppi - talk\" || displayName === \"Feppi - silent\") {\n      if (Object.keys(fields).includes(\"talk\")) {\n        shared_props[Bot.getId().default][\"status\"] = fields.talk.stringValue === \"true\";\n      }\n    }\n  };\n\n  const get_query = msg => {\n    const query = {\n      session: sessionPath,\n      queryInput: {\n        text: {\n          // The query to send to the dialogflow agent\n          text: msg,\n          // The language used by the client (en-US/id)\n          languageCode: \"id\"\n        }\n      }\n    };\n\n    return query;\n  };\n\n  // Send request and log result\n  const talk = async msg => {\n    const query = get_query(msg);\n    const responses = await sessionClient.detectIntent(query);\n    const { fulfillmentText } = responses[0].queryResult;\n\n    const status = shared_props[Bot.getId().default].status? shared_props[Bot.getId().default].status: true;\n\n    if (status && fulfillmentText.length >= 1) {\n      Bot.replyText(fulfillmentText);\n    }\n\n    talk_check(responses);\n    console.log(shared_props);\n    console.log(shared_props[Bot.getId().default].status, status);\n    console.log(\"Detected intent\", responses[0].queryResult.intent.displayName);\n  };\n\n  return {\n    talk\n  };\n};\n"]}