{"version":3,"sources":["../../../src/Bot/Helper/YoutubeDL.js"],"names":["YoutubeDL","constructor","url","getInfo","bind","generateUrl","res","resolution","options","Promise","resolve","reject","youtubedl","err","info","urlName","url_cache","Store","getStore","force","url_status","ResponseCheck","status","thumbnail","setStore"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,SAAN,CAAgB;AAC7BC,cAAYC,GAAZ,EAAiB;AACf,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,UAAQG,GAAR,EAAa;AACX,UAAMC,aAAaD,OAAO,GAA1B;AACA;AACA,UAAME,UAAU,EAAhB;;AAEA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,0BAAUT,OAAV,CAAkB,KAAKD,GAAvB,EAA4BM,OAA5B,EAAqC,OAAOK,GAAP,EAAYC,IAAZ,KAAqB;AACxD,YAAID,GAAJ,EAAS;AACPF,iBAAOE,GAAP;AACA,gBAAMA,GAAN;AACD;AACD,eAAOH,QAAQI,IAAR,CAAP;AACD,OAND;AAOD,KARM,CAAP;AASD;;AAED,QAAMT,WAAN,CAAkBU,OAAlB,EAA2BP,OAA3B,EAAoC;AAClC,QAAIQ,YAAY,MAAMC,gBAAMC,QAAN,CAAe,WAAf,CAAtB;;AAEA,QAAIF,UAAUD,OAAV,KAAsBP,QAAQW,KAAR,KAAkB,KAA5C,EAAmD;AAC/C,YAAMC,aAAa,MAAMC,wBAAcC,MAAd,CAAqBN,UAAUD,OAAV,EAAmBb,GAAxC,CAAzB;;AAEA,UAAIkB,eAAe,GAAnB,EAAyB;AACvB,cAAM,EAAElB,GAAF,EAAOqB,SAAP,KAAqB,MAAM,KAAKpB,OAAL,EAAjC;AACAa,kBAAU,QAAV,IAAsB,EAAEd,GAAF,EAAOqB,SAAP,EAAtB;AACA,cAAMN,gBAAMO,QAAN,CAAe,EAAER,WAAWA,SAAb,EAAf,CAAN;AACA,eAAO,EAAEd,GAAF,EAAOqB,SAAP,EAAP;AACD,OALD,MAKO;AACL,eAAOP,UAAUD,OAAV,CAAP;AACD;AAEJ,KAZD,MAYO;AACDC,kBAAY,EAAZ;AACA,YAAM,EAAEd,GAAF,EAAOqB,SAAP,KAAqB,MAAM,KAAKpB,OAAL,EAAjC;AACAa,gBAAU,QAAV,IAAsB,EAAEd,GAAF,EAAOqB,SAAP,EAAtB;AACA,YAAMN,gBAAMO,QAAN,CAAe,EAAER,WAAWA,SAAb,EAAf,CAAN;AACA,aAAO,EAAEd,GAAF,EAAOqB,SAAP,EAAP;AACH;AACJ;;AA7C4B;kBAAVvB,S","file":"YoutubeDL.js","sourcesContent":["import youtubedl from \"youtube-dl\";\nimport ResponseCheck from \"../../Bot/Helper/ResponseCheck\";\nimport Store from \"../../Services/Store\";\n\nexport default class YoutubeDL {\n  constructor(url) {\n    this.url = url;\n    this.getInfo = this.getInfo.bind(this)\n    this.generateUrl = this.generateUrl.bind(this)\n  }\n\n  getInfo(res) {\n    const resolution = res || 480;\n    // const options = [`-f 'bestvideo[height<=${resolution}]+bestaudio/best[height<=${resolution}]'`]\n    const options = [];\n\n    return new Promise((resolve, reject) => {\n      youtubedl.getInfo(this.url, options, async (err, info) => {\n        if (err) {\n          reject(err)\n          throw err\n        };\n        return resolve(info);\n      });\n    });\n  }\n  \n  async generateUrl(urlName, options) {\n    let url_cache = await Store.getStore('url_cache')\n    \n    if (url_cache[urlName] && options.force === false) {\n        const url_status = await ResponseCheck.status(url_cache[urlName].url)\n\n        if (url_status !== 200 ) {\n          const { url, thumbnail } = await this.getInfo()\n          url_cache['bifest'] = { url, thumbnail }\n          await Store.setStore({ url_cache: url_cache })\n          return { url, thumbnail }\n        } else {\n          return url_cache[urlName]\n        }\n      \n    } else {\n          url_cache = {}\n          const { url, thumbnail } = await this.getInfo()\n          url_cache['bifest'] = { url, thumbnail }\n          await Store.setStore({ url_cache: url_cache })\n          return { url, thumbnail }\n      }\n  }\n  \n}\n"]}