{"version":3,"sources":["../../../src/Bot/Helper/YoutubeDL.js"],"names":["YoutubeDL","constructor","url","getInfo","bind","generateUrl","res","resolution","options","Promise","resolve","reject","youtubedl","err","info","urlName","Store","getStore","then","url_cache","force","ResponseCheck","status","url_status","thumbnail","setStore","catch"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEe,MAAMA,SAAN,CAAgB;AAC7BC,cAAYC,GAAZ,EAAiB;AACf,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,UAAQG,GAAR,EAAa;AACX,UAAMC,aAAaD,OAAO,GAA1B;AACA;AACA,UAAME,UAAU,EAAhB;;AAEA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,0BAAUT,OAAV,CAAkB,KAAKD,GAAvB,EAA4BM,OAA5B,EAAqC,CAACK,GAAD,EAAMC,IAAN,KAAe;AAClD,YAAID,GAAJ,EAAS;AACPF,iBAAOE,GAAP;AACA,gBAAMA,GAAN;AACD;AACD,eAAOH,QAAQI,IAAR,CAAP;AACD,OAND;AAOD,KARM,CAAP;AASD;;AAEDT,cAAYU,OAAZ,EAAqBP,OAArB,EAA8B;AAC5B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCK,sBAAMC,QAAN,CAAe,WAAf,EAA4BC,IAA5B,CAAiCC,aAAa;AAC5C,YAAIA,UAAUJ,OAAV,KAAsBP,QAAQY,KAAR,KAAkB,KAA5C,EAAmD;AACjDC,kCAAcC,MAAd,CAAqBH,UAAUJ,OAAV,EAAmBb,GAAxC,EAA6CgB,IAA7C,CAAkDK,cAAc;AAC9D,gBAAIA,eAAe,GAAnB,EAAwB;AACtB,mBAAKpB,OAAL,GAAee,IAAf,CAAoB,CAAC,EAAChB,GAAD,EAAMsB,SAAN,EAAD,KAAsB;AACxCL,0BAAUJ,OAAV,IAAqB;AACnBb,qBADmB;AAEnBsB;AAFmB,iBAArB;AAIAR,gCAAMS,QAAN,CAAe,EAACN,WAAWA,SAAZ,EAAf,EAAuCD,IAAvC,CAA4C,MAAM;AAChDR,0BAAQ,EAACR,GAAD,EAAMsB,SAAN,EAAR;AACD,iBAFD;AAGD,eARD,EAQGE,KARH,CAQSf,MART;AASD,aAVD,MAUO;AACLD,sBAAQS,UAAUJ,OAAV,CAAR;AACD;AACF,WAdD;AAeD,SAhBD,MAgBO;AACLI,sBAAY,EAAZ;AACA,eAAKhB,OAAL,GAAee,IAAf,CAAoB,CAAC,EAAChB,GAAD,EAAMsB,SAAN,EAAD,KAAsB;AACxCL,sBAAUJ,OAAV,IAAqB;AACnBb,iBADmB;AAEnBsB;AAFmB,aAArB;AAIAR,4BAAMS,QAAN,CAAe,EAACN,WAAWA,SAAZ,EAAf,EAAuCD,IAAvC,CAA4C,MAAM;AAChDR,sBAAQS,UAAUJ,OAAV,CAAR;AACD,aAFD;AAGD,WARD,EAQGW,KARH,CAQSf,MART;AASD;AACF,OA7BD;AA8BD,KA/BM,CAAP;AAgCD;AAxD4B;kBAAVX,S","file":"YoutubeDL.js","sourcesContent":["import youtubedl from \"youtube-dl\";\nimport ResponseCheck from \"../../Bot/Helper/ResponseCheck\";\nimport Store from \"../../Services/Store\";\n\nexport default class YoutubeDL {\n  constructor(url) {\n    this.url = url;\n    this.getInfo = this.getInfo.bind(this);\n    this.generateUrl = this.generateUrl.bind(this);\n  }\n\n  getInfo(res) {\n    const resolution = res || 480;\n    // const options = [`-f 'bestvideo[height<=${resolution}]+bestaudio/best[height<=${resolution}]'`]\n    const options = [];\n\n    return new Promise((resolve, reject) => {\n      youtubedl.getInfo(this.url, options, (err, info) => {\n        if (err) {\n          reject(err);\n          throw err;\n        }\n        return resolve(info);\n      });\n    });\n  }\n\n  generateUrl(urlName, options) {\n    return new Promise((resolve, reject) => {\n      Store.getStore(\"url_cache\").then(url_cache => {\n        if (url_cache[urlName] && options.force === false) {\n          ResponseCheck.status(url_cache[urlName].url).then(url_status => {\n            if (url_status !== 200) {\n              this.getInfo().then(({url, thumbnail}) => {\n                url_cache[urlName] = {\n                  url,\n                  thumbnail\n                };\n                Store.setStore({url_cache: url_cache}).then(() => {\n                  resolve({url, thumbnail});\n                });\n              }).catch(reject);\n            } else {\n              resolve(url_cache[urlName]);\n            }\n          });\n        } else {\n          url_cache = {};\n          this.getInfo().then(({url, thumbnail}) => {\n            url_cache[urlName] = {\n              url,\n              thumbnail\n            };\n            Store.setStore({url_cache: url_cache}).then(() => {\n              resolve(url_cache[urlName]);\n            });\n          }).catch(reject);\n        }\n      });\n    });\n  }\n}\n"]}