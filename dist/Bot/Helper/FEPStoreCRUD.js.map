{"version":3,"sources":["../../../src/Bot/Helper/FEPStoreCRUD.js"],"names":["set_store","data","store","Store","getStore","Object","keys","batch_list","includes","batch","selected_user_data","name","campus","room","push","setStore","fep","update_store","parseInt","num","delete_store","length","splice"],"mappings":";;;;;;AAAA;;AACA;;;;AACA;;;;;;AACA;;;AAGA,MAAMA,YAAY,MAAMC,IAAN,IAAc;AAC9B,QAAMC,QAAQ,MAAMC,gBAAMC,QAAN,CAAe,KAAf,CAApB;AACE,MAAIC,OAAOC,IAAP,CAAYC,oBAAZ,EAAwBC,QAAxB,CAAiCP,KAAKQ,KAAtC,CAAJ,EAAkD;;AAEhD,QAAI,CAACJ,OAAOC,IAAP,CAAYJ,KAAZ,EAAmBM,QAAnB,CAA4BP,KAAKQ,KAAjC,CAAL,EAA6C;AAC3CP,YAAMD,KAAKQ,KAAX,IAAoB,EAApB;AACD;;AAED,UAAMC,qBAAqB,CAACT,KAAKU,IAAN,EAAYV,KAAKW,MAAjB,EAAyBX,KAAKY,IAA9B,CAA3B;AACAX,UAAMD,KAAKQ,KAAX,EAAkBK,IAAlB,CAAuBJ,kBAAvB;AACA,UAAMP,gBAAMY,QAAN,CAAe,EAAEC,KAAKd,KAAP,EAAf,CAAN;AACD;AACJ,CAZD;;AAcA,MAAMe,eAAe,MAAMhB,IAAN,IAAc;AACjC,QAAMC,QAAQ,MAAMC,gBAAMC,QAAN,CAAe,KAAf,CAApB;AACE,MAAIC,OAAOC,IAAP,CAAYC,oBAAZ,EAAwBC,QAAxB,CAAiCP,KAAKQ,KAAtC,CAAJ,EAAkD;AAC9C,UAAMC,qBAAqB,CAACT,KAAKU,IAAN,EAAYV,KAAKW,MAAjB,EAAyBX,KAAKY,IAA9B,CAA3B;AACAX,UAAMD,KAAKQ,KAAX,EAAkBS,SAASjB,KAAKkB,GAAd,EAAmB,EAAnB,IAAyB,CAA3C,IAAgDT,kBAAhD;AACA,UAAMP,gBAAMY,QAAN,CAAe,EAAEC,KAAKd,KAAP,EAAf,CAAN;AACH;AACJ,CAPD;;AASA,MAAMkB,eAAe,MAAMnB,IAAN,IAAc;AAC/B,QAAMC,QAAQ,MAAMC,gBAAMC,QAAN,CAAe,KAAf,CAApB;;AAEA,MAAIF,MAAMD,KAAKQ,KAAX,EAAkBY,MAAlB,GAA2B,CAA/B,EAAkC;AAChCnB,UAAMD,KAAKQ,KAAX,EAAkBa,MAAlB,CAAyBJ,SAASjB,KAAKkB,GAAd,EAAmB,EAAnB,IAAyB,CAAlD,EAAqD,CAArD;AACD;;AAED,QAAMhB,gBAAMY,QAAN,CAAe,EAAEC,KAAKd,KAAP,EAAf,CAAN;AACH,CARD;;kBAUe;AACbF,WADa;AAEboB,cAFa;AAGbH;AAHa,C","file":"FEPStoreCRUD.js","sourcesContent":["import { batch_list } from \"../../Bot/internal\";\nimport storage from \"node-persist\";\nimport Store from \"../../Services/Store\";\n// import { getStore, setStore } from \"../../internal\";\n\n\nconst set_store = async data => {\n  const store = await Store.getStore(\"fep\");\n    if (Object.keys(batch_list).includes(data.batch)) {\n      \n      if (!Object.keys(store).includes(data.batch)){\n        store[data.batch] = [];\n      }\n      \n      const selected_user_data = [data.name, data.campus, data.room];\n      store[data.batch].push(selected_user_data);\n      await Store.setStore({ fep: store });\n    }\n};\n\nconst update_store = async data => {\n  const store = await Store.getStore(\"fep\");\n    if (Object.keys(batch_list).includes(data.batch)) {\n        const selected_user_data = [data.name, data.campus, data.room];\n        store[data.batch][parseInt(data.num, 10) - 1] = selected_user_data;\n        await Store.setStore({ fep: store });\n    }\n};\n\nconst delete_store = async data => {\n    const store = await Store.getStore(\"fep\");\n\n    if (store[data.batch].length > 0) {\n      store[data.batch].splice(parseInt(data.num, 10) - 1, 1);\n    }\n  \n    await Store.setStore({ fep: store });\n};\n  \nexport default {\n  set_store,\n  delete_store,\n  update_store  \n} \n"]}