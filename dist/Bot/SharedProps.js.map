{"version":3,"sources":["../../src/Bot/SharedProps.js"],"names":["copySet","newObj","oldObj","temp","keys","Object","old","forEach","k","SharedPropsFactory","constructor","store","set","props","log","sourceId","Promise","resolve","reject","Firebase","fdb","collection","add","console","Date","storeUpdateListener","rdb","ref","SharedProps"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,UAAU,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClC,MAAIC,OAAO,EAAX;AACA,QAAMC,OAAOC,OAAOD,IAAP,CAAYH,MAAZ,CAAb;;AAEA,MAAIG,QAAQ,CAAZ,EAAe;AACb,WAAOE,GAAP;AACD,GAFD,MAEO;AACLF,SAAKG,OAAL,CAAaC,KAAK;AAChBL,WAAKK,CAAL,iBACKN,OAAOM,CAAP,CADL,EAEKR,QAAQC,OAAOO,CAAP,CAAR,CAFL;AAID,KALD;AAMD;;AAED,SAAOL,IAAP;AACD,CAhBD;;AAkBA,MAAMM,kBAAN,CAAyB;AACvBC,gBAAc;AACZ,SAAKC,KAAL,GAAa,EAAb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,MAAIC,KAAJ,EAAW;AACT,UAAMb,UAAU,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClC,UAAIC,OAAO,EAAX;AACA,YAAMC,OAAOC,OAAOD,IAAP,CAAYH,MAAZ,CAAb;;AAEA,UAAIG,QAAQ,CAAZ,EAAe;AACb,eAAOE,GAAP;AACD,OAFD,MAEO;AACLF,aAAKG,OAAL,CAAaC,KAAK;AAChBL,eAAKK,CAAL,iBACKN,OAAOM,CAAP,CADL,EAEKR,QAAQC,OAAOO,CAAP,CAAR,CAFL;AAID,SALD;AAMD;;AAED,aAAOL,IAAP;AACD,KAhBD;AAiBD;;AAEDW,MAAIC,QAAJ,EAAc;AACZ,QAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,UAAIH,QAAJ,EAAc;AACZI,2BAASC,GAAT,CAAaC,UAAb,CAAwB,OAAxB,EAAiCC,GAAjC,CAAqC,KAAKX,KAAL,CAAWI,QAAX,CAArC;AACAQ,gBAAQT,GAAR,CAAY,4BAAZ,EAA0CC,QAA1C,EAAoD,IAAIS,IAAJ,EAApD;AACD;AACDL,yBAASC,GAAT,CAAaC,UAAb,CAAwB,OAAxB,EAAiCC,GAAjC,CAAqC,KAAKX,KAA1C;AACAY,cAAQT,GAAR,CAAY,4BAAZ,EAA0C,IAAIU,IAAJ,EAA1C;AACD,KAPD;AAQD;;AAEDC,wBAAsB;AACpBN,uBAASO,GAAT,CAAaC,GAAb,CAAiB,aAAjB,EAAgCf,GAAhC,CAAoC,KAAKD,KAAzC;AACAY,YAAQT,GAAR,CAAY,6BAAZ,EAA2C,IAAIU,IAAJ,EAA3C;AACD;AA/CsB;;AAkDzB,MAAMI,cAAc,IAAInB,kBAAJ,EAApB;;QAGEmB,W,GAAAA,W","file":"SharedProps.js","sourcesContent":["import Store from \"../Services/Store\";\nimport fs from \"fs-extra\";\nimport mkdirp from \"mkdirp\";\nimport path from \"path\";\nimport uuid from \"uuid\";\n\nimport config from \"../Config/Line\";\n\nimport Firebase from \"../Services/Firebase\";\nimport observe from \"observe\";\n\nconst copySet = (newObj, oldObj) => {\n  let temp = {};\n  const keys = Object.keys(newObj);\n\n  if (keys <= 0) {\n    return old;\n  } else {\n    keys.forEach(k => {\n      temp[k] = {\n        ...oldObj[k],\n        ...copySet(newObj[k])\n      };\n    });\n  }\n\n  return temp;\n};\n\nclass SharedPropsFactory {\n  constructor() {\n    this.store = {};\n    // this.store = observe({});\n    // this.store = new Proxy({}, {\n    //   set: this._set,\n    //   get: this._get\n    // });\n    // this.store.on(\"change\", change => {\n    //   this.storeUpdateListener();\n    // });\n  }\n\n  set(props) {\n    const copySet = (newObj, oldObj) => {\n      let temp = {};\n      const keys = Object.keys(newObj);\n\n      if (keys <= 0) {\n        return old;\n      } else {\n        keys.forEach(k => {\n          temp[k] = {\n            ...oldObj[k],\n            ...copySet(newObj[k])\n          };\n        });\n      }\n\n      return temp;\n    };\n  }\n\n  log(sourceId) {\n    new Promise((resolve, reject) => {\n      if (sourceId) {\n        Firebase.fdb.collection(\"Props\").add(this.store[sourceId]);\n        console.log(\"[SharedProps] Props logged\", sourceId, new Date());\n      }\n      Firebase.fdb.collection(\"Store\").add(this.store);\n      console.log(\"[SharedProps] Store logged\", new Date());\n    });\n  }\n\n  storeUpdateListener() {\n    Firebase.rdb.ref(\"SharedProps\").set(this.store);\n    console.log(\"[SharedProps] Store updated\", new Date());\n  }\n}\n\nconst SharedProps = new SharedPropsFactory();\n\nexport {\n  SharedProps\n};\n"]}