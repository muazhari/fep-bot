{"version":3,"sources":["../../src/Bot/SharedProps.js"],"names":["SharedPropsFactory","constructor","store","observer","on","change","storeUpdateListener","log","sourceId","Promise","resolve","reject","Firebase","fdb","collection","add","console","Date","rdb","ref","set","SharedProps"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;;;AAEA,MAAMA,kBAAN,CAAyB;AACvBC,gBAAc;AACZ,SAAKC,KAAL,GAAa,EAAb;AACA;AACA;AACA;AACA;AACA,SAAKC,QAAL,GAAgB,uBAAQ,KAAKD,KAAb,CAAhB;AACA,SAAKC,QAAL,CAAcC,EAAd,CAAiB,QAAjB,EAA2BC,UAAU;AACnC,WAAKC,mBAAL;AACD,KAFD;AAGD;;AAEDC,MAAIC,QAAJ,EAAc;AACZ,QAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,UAAIH,QAAJ,EAAc;AACZI,2BAASC,GAAT,CAAaC,UAAb,CAAwB,OAAxB,EAAiCC,GAAjC,CAAqC,KAAKb,KAAL,CAAWM,QAAX,CAArC;AACAQ,gBAAQT,GAAR,CAAY,4BAAZ,EAA0CC,QAA1C,EAAoD,IAAIS,IAAJ,EAApD;AACD;AACDL,yBAASC,GAAT,CAAaC,UAAb,CAAwB,OAAxB,EAAiCC,GAAjC,CAAqC,KAAKb,KAA1C;AACAc,cAAQT,GAAR,CAAY,4BAAZ,EAA0C,IAAIU,IAAJ,EAA1C;AACD,KAPD;AAQD;;AAEDX,wBAAsB;AACpBM,uBAASM,GAAT,CAAaC,GAAb,CAAiB,aAAjB,EAAgCC,GAAhC,CAAoC,KAAKlB,KAAzC;AACAc,YAAQT,GAAR,CAAY,6BAAZ,EAA2C,IAAIU,IAAJ,EAA3C;AACD;AA3BsB;;AA8BzB,MAAMI,cAAc,IAAIrB,kBAAJ,EAApB;;QAGEqB,W,GAAAA,W","file":"SharedProps.js","sourcesContent":["import Store from \"../Services/Store\";\nimport fs from \"fs-extra\";\nimport mkdirp from \"mkdirp\";\nimport path from \"path\";\nimport uuid from \"uuid\";\n\nimport config from \"../Config/Line\";\n\nimport Firebase from \"../Services/Firebase\";\nimport observe from \"observe\";\n\nclass SharedPropsFactory {\n  constructor() {\n    this.store = {};\n    // this.store = new Proxy({}, {\n    //   set: this._set,\n    //   get: this._get\n    // });\n    this.observer = observe(this.store);\n    this.observer.on(\"change\", change => {\n      this.storeUpdateListener;\n    });\n  }\n\n  log(sourceId) {\n    new Promise((resolve, reject) => {\n      if (sourceId) {\n        Firebase.fdb.collection(\"Props\").add(this.store[sourceId]);\n        console.log(\"[SharedProps] Props logged\", sourceId, new Date());\n      }\n      Firebase.fdb.collection(\"Store\").add(this.store);\n      console.log(\"[SharedProps] Store logged\", new Date());\n    });\n  }\n\n  storeUpdateListener() {\n    Firebase.rdb.ref(\"SharedProps\").set(this.store);\n    console.log(\"[SharedProps] Store updated\", new Date());\n  }\n}\n\nconst SharedProps = new SharedPropsFactory();\n\nexport {\n  SharedProps\n};\n"]}