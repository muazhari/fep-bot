{"version":3,"sources":["../../../src/Bot/Features/Twibbon.js"],"names":["objectsHaveSameKeys","objects","allKeys","reduce","keys","object","concat","Object","union","Set","every","size","length","Twibbon","Bot","user","userId","origin","originId","getId","manual_transform","twibbon_overlay","filename","transformation","crop","width","height","format","public_id","overlay","flags","aspect_ratio","twibbon_list","id","category","name","url","transform","auto","gravity","Math","floor","manual","y","x","ready","args","data","SharedProps","set","twibbon","type","status","source","displayList","replyText","command_prefix","selected","filter","twibbonColumns","map","thumbnailImageUrl","imageBackgroundColor","text","actions","label","JSON","stringify","sendMessage","altText","template","columns","imageAspectRatio","imageSize","listenPostback","getProfile","then","profile","messages","displayName","push","getTransformedFileUrl","twibbonSetting","publicId","getTwibbonById","result","cloudinary","generate","Promise","resolve","reject","CloudinaryUtils","upload","twibbonBackgroundMeta","performTransformations","twibbonOriginalName","resultOriginalUrl","twibonPreviewName","resultPreviewUrl","all","fileMeta","twibbonOriginalUrl","secure_url","twibbonPreviewUrl","fs","unlinkSync","originalContentPath","previewPath","make","props","event","message","originalContentUrl","previewImageUrl","listenImage","getContent","store","userSwitch","userInSameCommunal","twibbonIdChosen","undefined"],"mappings":"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","file":"Twibbon.js","sourcesContent":["import {\n  command_prefix,\n  batch_list,\n  baseURL,\n  SharedProps\n} from \"../../Bot\";\nimport FEPStoreCRUD from \"../../Bot/Helper/FEPStoreCRUD\";\nimport CloudinaryUtils from \"../../Bot/Helper/CloudinaryUtils\";\nimport cloudinary from \"cloudinary\";\nimport fs from \"fs-extra\";\nimport request from \"request\";\nimport cp from \"child_process\";\nimport path from \"path\";\n\nconst objectsHaveSameKeys = (...objects) => {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n};\n\nexport const Twibbon = Bot => {\n  const {\n    user: userId,\n    origin: originId\n  } = Bot.getId();\n\n  const manual_transform = (twibbon_overlay, filename, size) => {\n    return {\n      transformation: [{\n        crop: \"fit\",\n        width: size,\n        height: size,\n        format: \"jpg\",\n        public_id: `${filename}-twibbon`\n      }, {\n        overlay: twibbon_overlay,\n        flags: \"relative\",\n        width: size,\n        height: size,\n        aspect_ratio: \"1:1\"\n      }]\n    };\n  };\n\n  const twibbon_list = [{\n      id: \"twibbon_covid\",\n      category: \"covid\",\n      name: \"Covid #DiRumahAja\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1585597597/twibbons/twibbon_covid.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [{\n              gravity: \"auto\",\n              crop: \"fill\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size - Math.floor(size * 0.225),\n              height: size - Math.floor(size * 0.225),\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_covid.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          },\n          manual: {\n            transformation: [{\n              crop: \"fit\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size - Math.floor(size * 0.225),\n              height: size - Math.floor(size * 0.225),\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_covid.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          }\n        };\n      }\n    },\n    {\n      id: \"twibbon_cs\",\n      category: \"socs\",\n      name: \"Computer Science\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1564639746/twibbons/twibbon_cs.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [{\n              gravity: \"auto\",\n              crop: \"fill\",\n              format: \"jpg\",\n              aspect_ratio: \"1:1\",\n              public_id: `${filename}-twibbon`\n            }, {\n              gravity: \"auto\",\n              crop: \"fill_pad\",\n              width: size,\n              height: size,\n              y: Math.floor(-size * 0.2),\n              x: Math.floor(size * 0.045)\n            }, {\n              overlay: \"twibbons:twibbon_cs.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          },\n          manual: {\n            transformation: [{\n              crop: \"fit\",\n              format: \"jpg\",\n              width: size,\n              height: size,\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_cs.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          }\n        };\n      }\n    },\n    {\n      id: \"twibbon_tfi\",\n      category: \"tfi\",\n      name: \"Teach For Indonesia\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1585599615/twibbons/twibbon_tfi.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [{\n              gravity: \"auto\",\n              crop: \"fill\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size + Math.floor(-size * 0.045),\n              height: size + Math.floor(size * 0.2),\n              x: Math.floor(size * 0.045),\n              y: Math.floor(-size * 0.2),\n              public_id: `${filename}-twibbon`\n            }, {\n              gravity: \"auto\",\n              crop: \"fill\",\n              width: size,\n              height: size\n            }, {\n              overlay: \"twibbons:twibbon_tfi.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          },\n          manual: {\n            transformation: [{\n              crop: \"fit\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size,\n              height: size,\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_tfi.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          }\n        };\n      }\n    },\n    {\n      id: \"twibbon_binus1\",\n      category: \"binus\",\n      name: \"Binus 1\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1565372081/twibbons/twibbon_binus1.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [{\n              gravity: \"auto\",\n              crop: \"fill\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size - Math.floor(size * 0.2),\n              height: size - Math.floor(size * 0.2),\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_binus1.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          },\n          manual: {\n            transformation: [{\n              crop: \"fit\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size - Math.floor(size * 0.2125),\n              height: size - Math.floor(size * 0.2),\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_binus1.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          }\n        };\n      }\n    },\n    {\n      id: \"twibbon_binus2\",\n      category: \"binus\",\n      name: \"Binus 2\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1585598545/twibbons/twibbon_binus2.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [{\n              gravity: \"auto\",\n              crop: \"fill\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size - Math.floor(size * 0.225),\n              height: size - Math.floor(size * 0.225),\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_binus2.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          },\n          manual: {\n            transformation: [{\n              crop: \"fit\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size - Math.floor(size * 0.225),\n              height: size - Math.floor(size * 0.225),\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_binus2.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          }\n        };\n      }\n    }, {\n      id: \"twibbon_binus3\",\n      category: \"binus\",\n      name: \"Binus 3\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1585598544/twibbons/twibbon_binus3.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [{\n              gravity: \"auto\",\n              crop: \"fill\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size - Math.floor(size * 0.225),\n              height: size - Math.floor(size * 0.225),\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_binus3.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          },\n          manual: {\n            transformation: [{\n              crop: \"fit\",\n              format: \"jpg\",\n              // aspect_ratio: \"1:1\",\n              width: size - Math.floor(size * 0.225),\n              height: size - Math.floor(size * 0.225),\n              public_id: `${filename}-twibbon`\n            }, {\n              overlay: \"twibbons:twibbon_binus3.png\",\n              flags: \"relative\",\n              width: size,\n              height: size,\n              aspect_ratio: \"1:1\"\n            }]\n          }\n        };\n      }\n    },\n  ];\n\n  const ready = args => {\n    if (args.length <= 1) {\n      const data = {\n        category: args[0]\n      };\n\n      // ready-up switch\n      SharedProps.set({\n        [userId]: {\n          twibbon: {\n            id: null,\n            type: null,\n            status: true,\n            source: {\n              id: originId\n            }\n          }\n        }\n      });\n\n      displayList(data.category);\n    } else {\n      Bot.replyText(`${command_prefix}twibbon <type>`);\n    }\n  };\n\n  const displayList = category => {\n    let selected = twibbon_list.filter(twibbon => typeof twibbon.category === \"string\");\n\n    if (category) {\n      selected = selected.filter(twibbon => twibbon.category == category);\n      if (selected.length === 0) {\n        return Bot.replyText(`Tidak ada kategori, lihat di ${command_prefix}twibbon`);\n      }\n    }\n\n    const twibbonColumns = selected.map(twibbon => {\n      return {\n        thumbnailImageUrl: twibbon.url,\n        imageBackgroundColor: \"#FFFFFF\",\n        text: twibbon.name,\n        actions: [{\n          type: \"postback\",\n          label: \"Auto-AI Mode\",\n          data: JSON.stringify({\n            twibbon: {\n              id: twibbon.id,\n              type: \"auto\"\n            }\n          })\n        }, {\n          type: \"postback\",\n          label: \"Manual Mode\",\n          data: JSON.stringify({\n            twibbon: {\n              id: twibbon.id,\n              type: \"manual\"\n            }\n          })\n        }]\n      };\n    });\n\n    Bot.sendMessage({\n      type: \"template\",\n      altText: \"Twibbon list\",\n      template: {\n        type: \"carousel\",\n        columns: twibbonColumns,\n        imageAspectRatio: \"square\",\n        imageSize: \"cover\"\n      }\n    });\n  };\n\n  const listenPostback = data => {\n    if (data.twibbon) {\n      const {\n        twibbon\n      } = data;\n\n      // ready-up switch\n      SharedProps.set({\n        [userId]: {\n          twibbon: {\n            id: twibbon.id,\n            type: twibbon.type,\n            status: true,\n            source: {\n              id: originId\n            }\n          }\n        }\n      });\n\n      Bot.getProfile().then(profile => {\n        const messages = [`Hai ${profile.displayName}, masukin gambar mu disini ya!`];\n        if (twibbon.type === \"manual\") {\n          messages.push(`Pastikan 1:1 ya fotonya~\\n\\nTips: gunakan in-app camera line disamping kolom chat dan set ratio ke 1:1`);\n        }\n        Bot.replyText(messages);\n      });\n    }\n  };\n\n  const getTransformedFileUrl = (twibbonSetting, publicId, filename, size) => {\n    const getTwibbonById = twibbon_list.filter(twibbon => twibbon.id === twibbonSetting.id)[0];\n    const result = cloudinary.url(publicId, getTwibbonById.transform(filename, size)[twibbonSetting.type]);\n    return result;\n  };\n\n  const generate = data => {\n    return new Promise((resolve, reject) => {\n      CloudinaryUtils.upload(data.url, data.filename).then(twibbonBackgroundMeta => {\n        performTransformations(twibbonBackgroundMeta);\n      });\n\n      const performTransformations = twibbonBackgroundMeta => {\n        const twibbonOriginalName = `${data.filename}-twibbon`;\n        const resultOriginalUrl = getTransformedFileUrl(data.twibbonSetting, twibbonBackgroundMeta.public_id, twibbonOriginalName, 1040);\n\n        const twibonPreviewName = `${data.filename}-twibbon-preview`;\n        const resultPreviewUrl = getTransformedFileUrl(data.twibbonSetting, twibbonBackgroundMeta.public_id, twibonPreviewName, 240);\n\n        Promise.all([\n          CloudinaryUtils.upload(resultOriginalUrl, twibbonOriginalName),\n          CloudinaryUtils.upload(resultPreviewUrl, twibonPreviewName)\n        ]).then(fileMeta => {\n          resolve({\n            twibbonOriginalUrl: fileMeta[0].secure_url,\n            twibbonPreviewUrl: fileMeta[1].secure_url\n          });\n\n          fs.unlinkSync(data.originalContentPath);\n          fs.unlinkSync(data.previewPath);\n        });\n      };\n    });\n  };\n\n  const make = args => {\n    const data = {\n      url: args[0],\n      originalContentPath: args[1],\n      previewPath: args[2],\n      twibbonSetting: args[3],\n      filename: Bot.props.event.message.id\n    };\n\n    generate(data).then(({\n      twibbonOriginalUrl,\n      twibbonPreviewUrl\n    }) => {\n      Bot.sendMessage({\n        type: \"image\",\n        originalContentUrl: twibbonOriginalUrl,\n        previewImageUrl: twibbonPreviewUrl\n      });\n    });\n\n    //switch back\n    SharedProps.set({\n      [userId]: {\n        twibbon: {\n          id: null,\n          type: null,\n          status: false,\n          source: {\n            id: originId\n          }\n        }\n      }\n    });\n  };\n\n  const listenImage = getContent => {\n    if (!SharedProps.store[userId].twibbon) {\n      return false\n    }\n\n    const userSwitch = SharedProps.store[userId].twibbon.status;\n    const userInSameCommunal = SharedProps.store[userId].twibbon.source.id === originId;\n    const twibbonIdChosen = SharedProps.store[userId].twibbon.id !== undefined;\n\n    if (!(userSwitch && userInSameCommunal && twibbonIdChosen)) {\n      return false\n    }\n\n    const twibbonSetting = {\n      id: SharedProps.store[userId].twibbon.id,\n      type: SharedProps.store[userId].twibbon.type\n    };\n\n    getContent().then(({\n      originalContentPath,\n      previewPath,\n      originalContentUrl,\n      previewImageUrl\n    }) => {\n      make([originalContentUrl, originalContentPath, previewPath, twibbonSetting]);\n    });\n\n    return true;\n  };\n\n  return {\n    ready,\n    listenImage,\n    listenPostback\n  };\n};\n"]}
