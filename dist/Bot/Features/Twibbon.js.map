{"version":3,"sources":["../../../src/Bot/Features/Twibbon.js"],"names":["objectsHaveSameKeys","objects","allKeys","reduce","keys","object","concat","Object","union","Set","every","size","length","Twibbon","Bot","uploads","manual_transform","twibbon_overlay","filename","transformation","crop","width","height","format","public_id","overlay","flags","aspect_ratio","twibbon_list","twibbon_cs","category","name","url","transform","auto","gravity","y","Math","floor","x","manual","twibbon_tfi","twibbon_binus1","twibbon_binus2","twibbon_binus3","ready","args","data","shared_props","getId","user","status","source","id","origin","display_list","replyText","command_prefix","listen","twibbon","type","profile","then","res","messages","displayName","push","selected","map","twibbon_id","pure_selected","filter","item","twibbon_contents","thumbnailImageUrl","imageBackgroundColor","text","actions","label","sendMessage","altText","template","columns","imageAspectRatio","imageSize","getResult","twibbon_setting","result","cloudinary","imgUpload","Promise","resolve","reject","uploader","upload","image","console","log","catch","err","warn","waitForAllUploads","queue","imageObject","callback","ids","join","generate","twibbon_bg","performTransformations","twibbon_ori_name","result_url","twibbonSetting","raw","twibbon_preview_name","result_preview_url","original","performResolve","preview","twibbonOriginalUrl","secure_url","twibbonPreviewUrl","fs","unlinkSync","originalPath","previewPath","make","props","event","message","originalContentUrl","previewImageUrl","insert","getContent","userSwitch","undefined","userInSameCommunal","twibbon_id_chosen"],"mappings":"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","file":"Twibbon.js","sourcesContent":["import {command_prefix, batch_list, baseURL, shared_props} from \"../../Bot\";\nimport FEPStoreCRUD from \"../../Bot/Helper/FEPStoreCRUD\";\nimport cloudinary from \"cloudinary\";\nimport fs from \"fs-extra\";\nimport request from \"request\";\nimport cp from \"child_process\";\nimport path from \"path\";\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\n\nexport const Twibbon = Bot => {\n  const uploads = {};\n\n  const manual_transform = (twibbon_overlay, filename, size) => {\n    return {\n      transformation: [\n        {\n          crop: \"fit\",\n          width: size,\n          height: size,\n          format: \"jpg\",\n          public_id: `${filename}-twibbon`\n        }, {\n          overlay: twibbon_overlay,\n          flags: \"relative\",\n          width: size,\n          height: size,\n          aspect_ratio: \"1:1\"\n        }\n      ]\n    };\n  };\n\n  const twibbon_list = {\n    twibbon_cs: {\n      category: \"socs\",\n      name: \"Computer Science\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1564639746/twibbon_cs.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [\n              {\n                gravity: \"auto\",\n                crop: \"fill\",\n                format: \"jpg\",\n                aspect_ratio: \"1:1\",\n                public_id: `${filename}-twibbon`\n              }, {\n                gravity: \"auto\",\n                crop: \"fill_pad\",\n                width: size,\n                height: size,\n                y: Math.floor(-size * 0.2),\n                x: Math.floor(size * 0.045)\n              }, {\n                overlay: \"twibbon_cs.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          },\n          manual: {\n            transformation: [\n              {\n                crop: \"fit\",\n                format: \"jpg\",\n                width: size,\n                height: size,\n                public_id: `${filename}-twibbon`\n              }, {\n                overlay: \"twibbon_cs.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          }\n        };\n      }\n    },\n\n    twibbon_tfi: {\n      category: \"tfi\",\n      name: \"Teach For Indonesia\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1565361689/twibbon_tfi.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [\n              {\n                gravity: \"auto\",\n                crop: \"fill\",\n                format: \"jpg\",\n                // aspect_ratio: \"1:1\",\n                width: size + Math.floor(-size * 0.045),\n                height: size + Math.floor(size * 0.2),\n                x: Math.floor(size * 0.045),\n                y: Math.floor(-size * 0.2),\n                public_id: `${filename}-twibbon`\n              }, {\n                gravity: \"auto\",\n                crop: \"fill\",\n                width: size,\n                height: size\n              }, {\n                overlay: \"twibbon_tfi.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          },\n          manual: {\n            transformation: [\n              {\n                crop: \"fit\",\n                format: \"jpg\",\n                // aspect_ratio: \"1:1\",\n                width: size,\n                height: size,\n                public_id: `${filename}-twibbon`\n              }, {\n                overlay: \"twibbon_tfi.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          }\n        };\n      }\n    },\n\n    twibbon_binus1: {\n      category: \"binus\",\n      name: \"Binus 1\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1565372081/twibbon_binus1.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [\n              {\n                gravity: \"auto\",\n                crop: \"fill\",\n                format: \"jpg\",\n                // aspect_ratio: \"1:1\",\n                width: size - Math.floor(size * 0.2),\n                height: size - Math.floor(size * 0.2),\n                public_id: `${filename}-twibbon`\n              }, {\n                overlay: \"twibbon_binus1.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          },\n          manual: {\n            transformation: [\n              {\n                crop: \"fit\",\n                format: \"jpg\",\n                // aspect_ratio: \"1:1\",\n                width: size - Math.floor(size * 0.2125),\n                height: size - Math.floor(size * 0.2),\n                public_id: `${filename}-twibbon`\n              }, {\n                overlay: \"twibbon_binus1.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          }\n        };\n      }\n    },\n\n    twibbon_binus2: {\n      category: \"binus\",\n      name: \"Binus 2\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1565372079/twibbon_binus2.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [\n              {\n                gravity: \"auto\",\n                crop: \"fill\",\n                format: \"jpg\",\n                // aspect_ratio: \"1:1\",\n                width: size - Math.floor(size * 0.225),\n                height: size - Math.floor(size * 0.225),\n                public_id: `${filename}-twibbon`\n              }, {\n                overlay: \"twibbon_binus2.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          },\n          manual: {\n            transformation: [\n              {\n                crop: \"fit\",\n                format: \"jpg\",\n                // aspect_ratio: \"1:1\",\n                width: size - Math.floor(size * 0.225),\n                height: size - Math.floor(size * 0.225),\n                public_id: `${filename}-twibbon`\n              }, {\n                overlay: \"twibbon_binus2.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          }\n        };\n      }\n    },\n\n    twibbon_binus3: {\n      category: \"binus\",\n      name: \"Binus 3\",\n      url: \"https://res.cloudinary.com/fep-bot/image/upload/v1565372078/twibbon_binus3.png\",\n      transform: (filename, size) => {\n        return {\n          auto: {\n            transformation: [\n              {\n                gravity: \"auto\",\n                crop: \"fill\",\n                format: \"jpg\",\n                // aspect_ratio: \"1:1\",\n                width: size - Math.floor(size * 0.225),\n                height: size - Math.floor(size * 0.225),\n                public_id: `${filename}-twibbon`\n              }, {\n                overlay: \"twibbon_binus3.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          },\n          manual: {\n            transformation: [\n              {\n                crop: \"fit\",\n                format: \"jpg\",\n                // aspect_ratio: \"1:1\",\n                width: size - Math.floor(size * 0.225),\n                height: size - Math.floor(size * 0.225),\n                public_id: `${filename}-twibbon`\n              }, {\n                overlay: \"twibbon_binus3.png\",\n                flags: \"relative\",\n                width: size,\n                height: size,\n                aspect_ratio: \"1:1\"\n              }\n            ]\n          }\n        };\n      }\n    }\n  };\n\n  const ready = args => {\n    if (args.length <= 1) {\n      const data = {\n        category: args[0]\n      };\n\n      // ready-up switch\n      shared_props[Bot.getId().user][\"twibbon\"] = {\n        status: true,\n        source: {\n          id: Bot.getId().origin\n        }\n      };\n\n      display_list(data.category || \"all\");\n    } else {\n      Bot.replyText(`${command_prefix}twibbon <type>`);\n    }\n  };\n\n  const listen = data => {\n    const {user} = Bot.getId();\n\n    if (data.twibbon) {\n      const {id, type} = data.twibbon;\n\n      // ready-up switch\n      shared_props[user][\"twibbon\"] = {\n        id: id,\n        type: type,\n        status: true,\n        source: {\n          id: Bot.getId().origin\n        }\n      };\n\n      Bot.profile().then(res => {\n        const messages = [`Hai ${res.displayName}, masukan gambar mu disini~`];\n        if (type === \"manual\") {\n          messages.push(`Pastikan 1:1 ya fotonya~\\n\\nTips: gunakan in-app camera line disamping kolom chat dan set ratio ke 1:1`);\n        }\n        Bot.replyText(messages);\n      });\n    }\n  };\n\n  const display_list = category => {\n    let selected = [];\n    if (category === \"all\") {\n      selected = Object.keys(twibbon_list).map(twibbon_id => {\n        return twibbon_id;\n      });\n    } else {\n      selected = Object.keys(twibbon_list).map(twibbon_id => {\n        if (twibbon_list[twibbon_id].category === category) {\n          return twibbon_id;\n        }\n      });\n    }\n\n    const pure_selected = selected.filter(item => {\n      return typeof item === \"string\";\n    });\n\n    if (pure_selected.length === 0) {\n      Bot.replyText(`Tidak ada kategori, lihat di ${command_prefix}twibbon`);\n    }\n\n    const twibbon_contents = pure_selected.map(id => {\n      const {url, name} = twibbon_list[id];\n      return {\n        thumbnailImageUrl: url,\n        imageBackgroundColor: \"#FFFFFF\",\n        text: `${name}`,\n        actions: [\n          {\n            type: \"postback\",\n            label: \"Auto-AI Mode\",\n            data: `{\"twibbon\":{\"id\":\"${id}\",\"type\":\"auto\"}}`\n          }, {\n            type: \"postback\",\n            label: \"Manual Mode\",\n            data: `{\"twibbon\":{\"id\":\"${id}\",\"type\":\"manual\"}}`\n          }\n        ]\n      };\n    });\n\n    Bot.sendMessage({\n      type: \"template\",\n      altText: \"Twibbon list\",\n      template: {\n        type: \"carousel\",\n        columns: twibbon_contents,\n        imageAspectRatio: \"square\",\n        imageSize: \"cover\"\n      }\n    });\n  };\n\n  const getResult = (twibbon_setting, public_id, filename, size) => {\n    const result = cloudinary.url(public_id, twibbon_list[twibbon_setting.id].transform(filename, size)[twibbon_setting.type]);\n    return result;\n  };\n\n  const imgUpload = (url, filename) => {\n    return new Promise((resolve, reject) => {\n      cloudinary.uploader.upload(url, {public_id: filename}).then(image => {\n        console.log(\"** File Upload (Promise)\");\n        console.log(\"* \" + image.public_id);\n        console.log(\"* \" + image.url);\n        resolve(image);\n      }).catch(err => {\n        console.log(\"** File Upload (Promise)\");\n        if (err) {\n          console.warn(err);\n          reject(err);\n        }\n      });\n    });\n  };\n\n  const waitForAllUploads = (type, queue, imageObject, callback) => {\n    uploads[type] = {\n      ...uploads[type],\n      ...imageObject\n    };\n    const ids = Object.keys(uploads[type]);\n    if (ids.length === queue) {\n      console.log(\"**  uploaded all raw files (\" + ids.join(\",\") + \") to cloudinary\");\n      callback();\n    }\n  };\n\n  const generate = data => {\n    return new Promise((resolve, reject) => {\n      imgUpload(data.url, data.filename).then(image => {\n        waitForAllUploads(\"raw\", 1, {\n          twibbon_bg: image\n        }, performTransformations);\n      });\n\n      const performTransformations = () => {\n        const twibbon_ori_name = `${data.filename}-twibbon`;\n        const result_url = getResult(data.twibbonSetting, uploads.raw.twibbon_bg.public_id, twibbon_ori_name, 1040);\n\n        const twibbon_preview_name = `${data.filename}-twibbon-preview`;\n        const result_preview_url = getResult(data.twibbonSetting, uploads.raw.twibbon_bg.public_id, twibbon_preview_name, 240);\n\n        imgUpload(result_url, twibbon_ori_name).then(image => {\n          waitForAllUploads(\"twibbon\", 2, {\n            original: image\n          }, performResolve);\n        });\n\n        imgUpload(result_preview_url, twibbon_preview_name).then(image => {\n          waitForAllUploads(\"twibbon\", 2, {\n            preview: image\n          }, performResolve);\n        });\n\n        const performResolve = () => {\n          resolve({twibbonOriginalUrl: `${uploads.twibbon.original.secure_url}`, twibbonPreviewUrl: `${uploads.twibbon.preview.secure_url}`});\n\n          fs.unlinkSync(data.originalPath);\n          fs.unlinkSync(data.previewPath);\n        };\n      };\n    });\n  };\n\n  const make = args => {\n    if (args.length === 4) {\n      const data = {\n        url: args[0],\n        originalPath: args[1],\n        previewPath: args[2],\n        twibbonSetting: args[3],\n        filename: Bot.props.event.message.id\n      };\n\n      generate(data).then(({twibbonOriginalUrl, twibbonPreviewUrl}) => {\n        Bot.sendMessage({type: \"image\", originalContentUrl: twibbonOriginalUrl, previewImageUrl: twibbonPreviewUrl});\n      });\n\n      //switch back\n      shared_props[Bot.getId().user].twibbon.status = false;\n    } else {\n      Bot.replyText(`${command_prefix}twibbon <image>`);\n    }\n  };\n\n  const insert = getContent => {\n    const {user} = Bot.getId();\n\n    const userSwitch = shared_props[user].twibbon.status === undefined\n      ? false\n      : shared_props[user].twibbon.status;\n\n    const userInSameCommunal = shared_props[user].twibbon.source.id === Bot.getId().origin;\n\n    const twibbon_id_chosen = shared_props[user].twibbon.id !== undefined;\n\n    if (userSwitch && userInSameCommunal && twibbon_id_chosen) {\n      const twibbonSetting = {\n        id: shared_props[user].twibbon.id,\n        type: shared_props[user].twibbon.type\n      };\n\n      getContent().then(({originalPath, previewPath, originalContentUrl, previewImageUrl}) => {\n        make([originalContentUrl, originalPath, previewPath, twibbonSetting]);\n      });\n    }\n  };\n\n  return {ready, insert, listen};\n};\n"]}