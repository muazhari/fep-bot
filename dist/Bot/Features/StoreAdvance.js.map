{"version":3,"sources":["../../../src/Bot/Features/StoreAdvance.js"],"names":["defaultBackupUrl","StoreAdvance","Bot","reset_store","args","length","Store","setStore","replyText","pre_store","data","url","response","FEPCleaner","run","parsed","JSON","parse","console","log","fep","command_prefix","backup_store","headers","getStore","backup","splice","timeStamp","Date","now","push","content","backup_fep"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,MAAMA,mBACJ,mIADF;;AAGO,MAAMC,sCAAeC,OAAO;AACjC,QAAMC,cAAc,MAAMC,IAAN,IAAc;AAChC,QAAIA,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,YAAMC,gBAAMC,QAAN,CAAe,EAAE,CAACH,KAAK,CAAL,CAAD,GAAW,EAAb,EAAf,CAAN;AACAF,UAAIM,SAAJ,CAAc,OAAd;AACD;AACF,GALD;;AAOA,QAAMC,YAAY,MAAML,IAAN,IAAc;AAC9B,QAAIA,KAAKC,MAAL,KAAgB,CAApB,EAAuB;AACrB,YAAMK,OAAO;AACXC,aAAKP,KAAK,CAAL;AADM,OAAb;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAMQ,WAAW,MAAMC,qBAAWC,GAAX,CAAeJ,KAAKC,GAApB,CAAvB;AACA,YAAMI,SAASC,KAAKC,KAAL,CAAWL,QAAX,CAAf;AACAM,cAAQC,GAAR,CAAYJ,MAAZ;;AAEA,YAAMT,gBAAMC,QAAN,CAAe,EAAEa,KAAKL,MAAP,EAAf,CAAN;AACAb,UAAIM,SAAJ,CAAc,OAAd;AACD,KAnBD,MAmBO;AACLN,UAAIM,SAAJ,CAAe,GAAEa,mBAAe,iBAAhC;AACD;AACF,GAvBD;;AAyBA,QAAMC,eAAe,MAAMlB,IAAN,IAAc;AACjC,UAAMmB,UAAU;AACd,sBAAgB;AADF,KAAhB;;AAIA,UAAMH,MAAM,MAAMd,gBAAMkB,QAAN,CAAe,KAAf,CAAlB;AACA,QAAIC,SAAS,MAAMnB,gBAAMkB,QAAN,CAAe,YAAf,CAAnB;;AAEA,QAAIC,MAAJ,EAAY;AACVA,aAAOC,MAAP,CAAc,CAAC,EAAf;AACD,KAFD,MAEO;AACLD,eAAS,EAAT;AACD;AACD;;AAEA,UAAME,YAAYC,KAAKC,GAAL,EAAlB;;AAEAJ,WAAOK,IAAP,CAAY,CAAC,EAAEH,WAAWA,SAAb,EAAwBI,SAASX,GAAjC,EAAD,CAAZ;;AAEA,UAAMd,gBAAMC,QAAN,CAAe,EAAEyB,YAAYP,MAAd,EAAf,CAAN;;AAEA,QAAIrB,SAAS,QAAb,EAAuB;AACrBF,UAAIM,SAAJ,CAAe,iBAAgBoB,KAAKC,GAAL,EAAW,EAA1C;AACD;AACF,GAxBD;;AA0BA,SAAO;AACL1B,eADK;AAELM,aAFK;AAGLa;AAHK,GAAP;AAKD,CAhEM","file":"StoreAdvance.js","sourcesContent":["import { command_prefix, batch_list } from \"../../Bot\";\nimport FEPCleaner from \"../../Bot/Helper/FEPCleaner\";\nimport Store from \"../../Services/Store\";\nimport storage from \"node-persist\";\n\nimport axios from \"axios\";\n\nconst defaultBackupUrl =\n  \"https://gist.githubusercontent.com/muazhari/38a5819eb228a20a693db0516e76bedb/raw/7716b10d92b526be02d94750c5cfc347ad7ed47d/feplist\";\n\nexport const StoreAdvance = Bot => {\n  const reset_store = async args => {\n    if (args.length === 1) {\n      await Store.setStore({ [args[0]]: {} });\n      Bot.replyText(\"Done!\");\n    }\n  };\n\n  const pre_store = async args => {\n    if (args.length === 1) {\n      const data = {\n        url: args[0]\n      };\n\n      //       const response = await axios({\n      //         method: \"get\",\n      //         url: data.url,\n      //         // responseType: \"text\"\n      //       });\n\n      //       console.log(typeof response.data);\n\n      const response = await FEPCleaner.run(data.url);\n      const parsed = JSON.parse(response);\n      console.log(parsed);\n\n      await Store.setStore({ fep: parsed });\n      Bot.replyText(\"Done!\");\n    } else {\n      Bot.replyText(`${command_prefix}pre_store <url>`);\n    }\n  };\n\n  const backup_store = async args => {\n    const headers = {\n      \"Content-type\": \"application/json\"\n    };\n\n    const fep = await Store.getStore(\"fep\");\n    let backup = await Store.getStore(\"backup_fep\");\n\n    if (backup) {\n      backup.splice(-20);\n    } else {\n      backup = [];\n    }\n    // const response = requests.post('https://paste.c-net.org/')\n\n    const timeStamp = Date.now();\n\n    backup.push([{ timeStamp: timeStamp, content: fep }]);\n\n    await Store.setStore({ backup_fep: backup });\n\n    if (args !== \"silent\") {\n      Bot.replyText(`Done backup!\\n${Date.now()}`);\n    }\n  };\n\n  return {\n    reset_store,\n    pre_store,\n    backup_store\n  };\n};\n"]}