{"version":3,"sources":["../../../src/Bot/Features/PosetLattice.js"],"names":["PosetLattice","Bot","make","data","Promise","resolve","reject","PLGenerator","run","then","result","JSON","parse","catch","generate","args","length","fileName","getId","origin","path","join","__dirname","console","log","cp","execSync","filePath","filePathPreview","sendMessage","type","originalContentUrl","previewImageUrl","replyText","fs","unlinkSync","err"],"mappings":";;;;;;;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEO,MAAMA,sCAAeC,OAAO;AACjC,QAAMC,OAAOC,QAAQ;AACnB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCC,sCAAYC,GAAZ,CAAgBL,IAAhB,EAAsBM,IAAtB,CAA2BC,UAAUL,QAAQM,KAAKC,KAAL,CAAWF,MAAX,CAAR,CAArC,EAAkEG,KAAlE,CAAwEP,MAAxE;AACD,KAFM,CAAP;AAGD,GAJD;;AAMA,QAAMQ,WAAWC,QAAQ;AACvB,QAAIA,KAAKC,MAAL,IAAe,CAAnB,EAAsB;AACpB,YAAMb,OAAO,EAAb;AACAA,WAAK,SAAL,IAAkBY,KAAK,CAAL,CAAlB;AACAZ,WAAK,UAAL,IAAmB,WAAnB,CAHoB,CAGY;AAChC,YAAMc,WAAWhB,IAAIiB,KAAJ,GAAYC,MAA7B;AACAhB,WAAK,UAAL,IAAmBiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,iCAArB,EAAyD,GAAEL,QAAS,MAApE,CAAnB;AACAd,WAAK,iBAAL,IAA0BiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,iCAArB,EAAyD,GAAEL,QAAS,cAApE,CAA1B;;AAEAM,cAAQC,GAAR,CAAYrB,IAAZ;AACAD,WAAKC,IAAL,EAAWM,IAAX,CAAgBC,UAAU;AACxBa,gBAAQC,GAAR,CAAYd,MAAZ;AACAe,gCAAGC,QAAH,CAAa,4BAA2BvB,KAAKwB,QAAS,QAAOxB,KAAKyB,eAAgB,EAAlF;;AAEA3B,YAAI4B,WAAJ,CAAgB,EAACC,MAAM,OAAP,EAAgBC,oBAAoB5B,KAAKwB,QAAzC,EAAmDK,iBAAiB7B,KAAKyB,eAAzE,EAAhB;;AAEA3B,YAAIgC,SAAJ,CAAcvB,MAAd;;AAEAwB,0BAAGC,UAAH,CAAchC,KAAKwB,QAAnB;AACAO,0BAAGC,UAAH,CAAchC,KAAKyB,eAAnB;AACD,OAVD,EAUGf,KAVH,CAUSuB,OAAO;AACdb,gBAAQC,GAAR,CAAY,oBAAZ,EAAkCY,GAAlC;AACD,OAZD;AAaD,KAtBD,MAsBO;AACLnC,UAAIgC,SAAJ,CAAc,6BAAd;AACD;AACF,GA1BD;;AA4BA,SAAO,EAACnB,QAAD,EAAP;AACD,CApCM","file":"PosetLattice.js","sourcesContent":["import {command_prefix, batch_list} from \"../../Bot\";\nimport PLGenerator from \"../../Bot/Helper/PosetLatticeGenerator\";\nimport fs from \"fs-extra\";\nimport cp from \"child_process\";\nimport Store from \"../../Services/Store\";\nimport path from \"path\";\n\nexport const PosetLattice = Bot => {\n  const make = data => {\n    return new Promise((resolve, reject) => {\n      PLGenerator.run(data).then(result => resolve(JSON.parse(result))).catch(reject);\n    });\n  };\n\n  const generate = args => {\n    if (args.length >= 1) {\n      const data = {};\n      data[\"setList\"] = args[0];\n      data[\"relation\"] = \"divisible\"; // only this feature available\n      const fileName = Bot.getId().origin;\n      data[\"filePath\"] = path.join(__dirname, \"../Helper/PosetLatticeGenerator\", `${fileName}.jpg`);\n      data[\"filePathPreview\"] = path.join(__dirname, \"../Helper/PosetLatticeGenerator\", `${fileName}-preview.jpg`);\n\n      console.log(data);\n      make(data).then(result => {\n        console.log(result);\n        cp.execSync(`convert -resize 240x jpg:${data.filePath} jpg:${data.filePathPreview}`);\n\n        Bot.sendMessage({type: \"image\", originalContentUrl: data.filePath, previewImageUrl: data.filePathPreview});\n\n        Bot.replyText(result);\n\n        fs.unlinkSync(data.filePath);\n        fs.unlinkSync(data.filePathPreview);\n      }).catch(err => {\n        console.log(\"Error PosetLattice\", err);\n      });\n    } else {\n      Bot.replyText(\"/pl <setList> [edge] [node]\");\n    }\n  };\n\n  return {generate};\n};\n"]}