{"version":3,"sources":["../../../src/Bot/Features/Courses.js"],"names":["coursesList","algo","sessionID","date","title","thumbnailURL","fileURL","searchCourseByDate","courseName","currentDate","Date","tomorrowDate","setHours","setDate","getDate","sessionsData","filter","course","courseDate","getTime","searchCourseBySessionID","searchSession","args","Courses","Bot","length","replyText","sessionsContents","map","thumbnailImageUrl","imageBackgroundColor","text","actions","type","label","uri","sendMessage","altText","template","columns","imageAspectRatio","imageSize"],"mappings":"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","file":"Courses.js","sourcesContent":["import {StoreAdvance, command_prefix} from \"../../Bot\";\n\nconst coursesList = {\n  algo: [\n    {\n      sessionID: \"6\",\n      date: \"2019-10-02\",\n      title: \"Program Control: Selection\",\n      thumbnailURL: \"https://cdn.glitch.com/4f9c0695-9885-46cf-9502-8a0e1cd81f5b%2Falgo6.jpg?v=1569974062520\",\n      fileURL: \"https://drive.google.com/file/d/19HVfWnc8WpwHVGFcCthtQo1U_t36j-7u/view\"\n    }, {\n      sessionID: \"9\",\n      date: \"2019-10-23\",\n      title: \"Program Control: Repetition\",\n      thumbnailURL: \"https://cdn.glitch.com/4f9c0695-9885-46cf-9502-8a0e1cd81f5b%2Fb4217f31-7075-4835-ac71-c395ec5b55a9.image.png?v=1569978617229\",\n      fileURL: \"https://drive.google.com/open?id=1HB0maKwS3bOZFDL42T-bDvgIcwm5J19B\"\n    }, {\n      sessionID: \"12\",\n      date: \"2019-10-23\",\n      title: \"Pointers and Arrays\",\n      thumbnailURL: \"https://cdn.glitch.com/4f9c0695-9885-46cf-9502-8a0e1cd81f5b%2F5f56696b-4375-496a-adb7-7b979bd89fac.image.png?v=1569978704524\",\n      fileURL: \"https://drive.google.com/file/d/19HVfWnc8WpwHVGFcCthtQo1U_t36j-7u/view\"\n    }, {\n      sessionID: \"17\",\n      date: \"2019-10-30\",\n      title: \"Material Review I\",\n      thumbnailURL: \"https://cdn.glitch.com/4f9c0695-9885-46cf-9502-8a0e1cd81f5b%2Fc9b47332-69ed-47c0-841c-7356c1c5d0d6.image.png?v=1569978925517\",\n      fileURL: \"https://drive.google.com/open?id=1cPbjT7UGDm9iEoU9XpnAJQrSeXkM29VR\"\n    }, {\n      sessionID: \"20\",\n      date: \"2019-11-20\",\n      title: \"Function and Recursion\",\n      thumbnailURL: \"https://cdn.glitch.com/4f9c0695-9885-46cf-9502-8a0e1cd81f5b%2F64e64b45-df5f-4a02-81f3-d0952c34a76a.image.png?v=1569978942289\",\n      fileURL: \"https://drive.google.com/open?id=10idtEp0bmhv4LPIPz2Fax9nYUEoDlxPa\"\n    }, {\n      sessionID: \"21\",\n      date: \"2019-11-20\",\n      title: \"Structures and Union and Memory Allocation\",\n      thumbnailURL: \"https://cdn.glitch.com/4f9c0695-9885-46cf-9502-8a0e1cd81f5b%2F3b57dc6f-f3c4-4dc8-8fcc-e9b1f502d972.image.png?v=1569978958399\",\n      fileURL: \"https://drive.google.com/open?id=1k1EtXq1y_t_VTee5DzZySdSLxClwQ5d7\"\n    }\n    ]\n}\n\nconst searchCourseByDate = courseName => {\n  const currentDate = new Date()\n  const tomorrowDate = new Date()\n\n  currentDate.setHours(0, 0, 0, 0)\n  tomorrowDate.setDate(currentDate.getDate() + 1)\n\n  const sessionsData = coursesList[courseName].filter(course => {\n    const courseDate = new Date(course.date).getTime()  \n    return courseDate >= currentDate && courseDate <= tomorrowDate;\n  })\n\n  return sessionsData;\n};\n\nconst searchCourseBySessionID = (courseName, sessionID) => {\n  const sessionsData = coursesList[courseName].filter(course => {\n    return course.sessionID === sessionID;\n  });\n\n  return sessionsData;\n};\n\nconst searchSession = (courseName, args) => {\n  let sessionsData;\n  if (args[0]) {\n      if(args[0] == 'now'){\n        sessionsData = searchCourseByDate(courseName);\n      } else {\n        sessionsData = searchCourseBySessionID(courseName, args[0]);\n      }\n    } else {\n      sessionsData = coursesList[courseName];\n    }\n  \n  return sessionsData;\n}\n\nexport const Courses = Bot => {\n  const algo = args => {    \n    const sessionsData = searchSession(\"algo\", args);\n\n    if (sessionsData.length === 0) {\n      return Bot.replyText(\"Not found.\");\n    }\n\n    const sessionsContents = sessionsData.map(({sessionID, date, title, thumbnailURL, fileURL}) => {\n      return {\n        thumbnailImageUrl: thumbnailURL,\n        imageBackgroundColor: \"#FFFFFF\",\n        text: `Session ${sessionID} - ${title}`,\n        actions: [\n          {\n            type: \"uri\",\n            label: \"Open\",\n            uri: fileURL\n          }\n        ]\n      };\n    });\n\n    Bot.sendMessage({\n      type: \"template\",\n      altText: \"Algorithm & Programming Sessions list\",\n      template: {\n        type: \"carousel\",\n        columns: sessionsContents,\n        imageAspectRatio: \"square\",\n        imageSize: \"cover\"\n      }\n    });\n  };\n\n  return {algo};\n};\n"]}